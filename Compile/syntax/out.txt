Production
 Rule[0]: _P0 => P0   
 Rule[1]: P0 => {1   D0   CS0   }1   
 Rule[2]: D0 => D0   int1   ID1   ;1   
 Rule[3]: D0 => int1   ID1   ;1   
 Rule[4]: S0 => ST0   
 Rule[5]: S0 => NST0   
 Rule[6]: ST0 => if1   (1   BEp0   )1   then1   S0   else1   S0   
 Rule[7]: ST0 => if1   (1   BEp0   )1   then1   S0   
 Rule[8]: NST0 => while1   (1   BEp0   )1   do1   S0   
 Rule[9]: NST0 => ID1   =1   CEp0   ;1   
 Rule[10]: NST0 => {1   CS0   }1   
 Rule[11]: CS0 => S0   CS0   
 Rule[12]: CS0 => S0   
 Rule[13]: BEp0 => BET0   
 Rule[14]: BEp0 => BEp0   or1   BET0   
 Rule[15]: BET0 => BEF0   
 Rule[16]: BET0 => BET0   and1   BEF0   
 Rule[17]: BEF0 => CEp0   relop1   CEp0   
 Rule[18]: BEF0 => CEp0   
 Rule[19]: CEp0 => CET0   
 Rule[20]: CEp0 => CEp0   +1   CET0   
 Rule[21]: CEp0 => CEp0   -1   CET0   
 Rule[22]: CET0 => CEF0   
 Rule[23]: CET0 => CET0   *1   CEF0   
 Rule[24]: CET0 => CET0   /1   CEF0   
 Rule[25]: CEF0 => ID1   
 Rule[26]: CEF0 => NUM1   
 Rule[27]: CEF0 => (1   CEp0   )1   
[0] _P => [#]   P0   
[1] _P => P0   [#]   
[2] P => [#]   {1   D0   CS0   }1   
[3] P => {1   [#]   D0   CS0   }1   
[4] P => {1   D0   [#]   CS0   }1   
[5] P => {1   D0   CS0   [#]   }1   
[6] P => {1   D0   CS0   }1   [#]   
[7] D => [#]   D0   int1   ID1   ;1   
[8] D => D0   [#]   int1   ID1   ;1   
[9] D => D0   int1   [#]   ID1   ;1   
[10] D => D0   int1   ID1   [#]   ;1   
[11] D => D0   int1   ID1   ;1   [#]   
[12] D => [#]   int1   ID1   ;1   
[13] D => int1   [#]   ID1   ;1   
[14] D => int1   ID1   [#]   ;1   
[15] D => int1   ID1   ;1   [#]   
[16] S => [#]   ST0   
[17] S => ST0   [#]   
[18] S => [#]   NST0   
[19] S => NST0   [#]   
[20] BEp => [#]   BET0   
[21] BEp => BET0   [#]   
[22] BEp => [#]   BEp0   or1   BET0   
[23] BEp => BEp0   [#]   or1   BET0   
[24] BEp => BEp0   or1   [#]   BET0   
[25] BEp => BEp0   or1   BET0   [#]   
[26] BET => [#]   BEF0   
[27] BET => BEF0   [#]   
[28] BET => [#]   BET0   and1   BEF0   
[29] BET => BET0   [#]   and1   BEF0   
[30] BET => BET0   and1   [#]   BEF0   
[31] BET => BET0   and1   BEF0   [#]   
[32] BEF => [#]   CEp0   relop1   CEp0   
[33] BEF => CEp0   [#]   relop1   CEp0   
[34] BEF => CEp0   relop1   [#]   CEp0   
[35] BEF => CEp0   relop1   CEp0   [#]   
[36] BEF => [#]   CEp0   
[37] BEF => CEp0   [#]   
[38] CEp => [#]   CET0   
[39] CEp => CET0   [#]   
[40] CEp => [#]   CEp0   +1   CET0   
[41] CEp => CEp0   [#]   +1   CET0   
[42] CEp => CEp0   +1   [#]   CET0   
[43] CEp => CEp0   +1   CET0   [#]   
[44] CEp => [#]   CEp0   -1   CET0   
[45] CEp => CEp0   [#]   -1   CET0   
[46] CEp => CEp0   -1   [#]   CET0   
[47] CEp => CEp0   -1   CET0   [#]   
[48] CET => [#]   CEF0   
[49] CET => CEF0   [#]   
[50] CET => [#]   CET0   *1   CEF0   
[51] CET => CET0   [#]   *1   CEF0   
[52] CET => CET0   *1   [#]   CEF0   
[53] CET => CET0   *1   CEF0   [#]   
[54] CET => [#]   CET0   /1   CEF0   
[55] CET => CET0   [#]   /1   CEF0   
[56] CET => CET0   /1   [#]   CEF0   
[57] CET => CET0   /1   CEF0   [#]   
[58] CEF => [#]   ID1   
[59] CEF => ID1   [#]   
[60] CEF => [#]   NUM1   
[61] CEF => NUM1   [#]   
[62] CEF => [#]   (1   CEp0   )1   
[63] CEF => (1   [#]   CEp0   )1   
[64] CEF => (1   CEp0   [#]   )1   
[65] CEF => (1   CEp0   )1   [#]   
[66] CS => [#]   S0   CS0   
[67] CS => S0   [#]   CS0   
[68] CS => S0   CS0   [#]   
[69] CS => [#]   S0   
[70] CS => S0   [#]   
[71] ST => [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
[72] ST => if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
[73] ST => if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
[74] ST => if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
[75] ST => if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
[76] ST => if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
[77] ST => if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
[78] ST => if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
[79] ST => if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
[80] ST => [#]   if1   (1   BEp0   )1   then1   S0   
[81] ST => if1   [#]   (1   BEp0   )1   then1   S0   
[82] ST => if1   (1   [#]   BEp0   )1   then1   S0   
[83] ST => if1   (1   BEp0   [#]   )1   then1   S0   
[84] ST => if1   (1   BEp0   )1   [#]   then1   S0   
[85] ST => if1   (1   BEp0   )1   then1   [#]   S0   
[86] ST => if1   (1   BEp0   )1   then1   S0   [#]   
[87] NST => [#]   while1   (1   BEp0   )1   do1   S0   
[88] NST => while1   [#]   (1   BEp0   )1   do1   S0   
[89] NST => while1   (1   [#]   BEp0   )1   do1   S0   
[90] NST => while1   (1   BEp0   [#]   )1   do1   S0   
[91] NST => while1   (1   BEp0   )1   [#]   do1   S0   
[92] NST => while1   (1   BEp0   )1   do1   [#]   S0   
[93] NST => while1   (1   BEp0   )1   do1   S0   [#]   
[94] NST => [#]   ID1   =1   CEp0   ;1   
[95] NST => ID1   [#]   =1   CEp0   ;1   
[96] NST => ID1   =1   [#]   CEp0   ;1   
[97] NST => ID1   =1   CEp0   [#]   ;1   
[98] NST => ID1   =1   CEp0   ;1   [#]   
[99] NST => [#]   {1   CS0   }1   
[100] NST => {1   [#]   CS0   }1   
[101] NST => {1   CS0   [#]   }1   
[102] NST => {1   CS0   }1   [#]   
IState ID 0 :
 _P  char[ # ]
  [#]   P0   
 P  char[ # ]
  [#]   {1   D0   CS0   }1   

IState ID 1 :
 _P  char[ # ]
  P0   [#]   

IState ID 2 :
 P  char[ # ]
  {1   [#]   D0   CS0   }1   
 D  char[ int ]
  [#]   D0   int1   ID1   ;1   
 D  char[ if ]
  [#]   D0   int1   ID1   ;1   
 D  char[ while ]
  [#]   D0   int1   ID1   ;1   
 D  char[ ID ]
  [#]   D0   int1   ID1   ;1   
 D  char[ { ]
  [#]   D0   int1   ID1   ;1   
 D  char[ int ]
  [#]   int1   ID1   ;1   
 D  char[ if ]
  [#]   int1   ID1   ;1   
 D  char[ while ]
  [#]   int1   ID1   ;1   
 D  char[ ID ]
  [#]   int1   ID1   ;1   
 D  char[ { ]
  [#]   int1   ID1   ;1   

IState ID 3 :
 P  char[ # ]
  {1   D0   [#]   CS0   }1   
 D  char[ int ]
  D0   [#]   int1   ID1   ;1   
 D  char[ if ]
  D0   [#]   int1   ID1   ;1   
 D  char[ while ]
  D0   [#]   int1   ID1   ;1   
 D  char[ ID ]
  D0   [#]   int1   ID1   ;1   
 D  char[ { ]
  D0   [#]   int1   ID1   ;1   
 S  char[ if ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 CS  char[ } ]
  [#]   S0   CS0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 CS  char[ } ]
  [#]   S0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   

IState ID 4 :
 D  char[ int ]
  int1   [#]   ID1   ;1   
 D  char[ if ]
  int1   [#]   ID1   ;1   
 D  char[ while ]
  int1   [#]   ID1   ;1   
 D  char[ ID ]
  int1   [#]   ID1   ;1   
 D  char[ { ]
  int1   [#]   ID1   ;1   

IState ID 5 :
 P  char[ # ]
  {1   D0   CS0   [#]   }1   

IState ID 6 :
 NST  char[ if ]
  ID1   [#]   =1   CEp0   ;1   
 NST  char[ while ]
  ID1   [#]   =1   CEp0   ;1   
 NST  char[ ID ]
  ID1   [#]   =1   CEp0   ;1   
 NST  char[ { ]
  ID1   [#]   =1   CEp0   ;1   
 NST  char[ } ]
  ID1   [#]   =1   CEp0   ;1   

IState ID 7 :
 S  char[ if ]
  NST0   [#]   
 S  char[ while ]
  NST0   [#]   
 S  char[ ID ]
  NST0   [#]   
 S  char[ { ]
  NST0   [#]   
 S  char[ } ]
  NST0   [#]   

IState ID 8 :
 S  char[ if ]
  ST0   [#]   
 S  char[ while ]
  ST0   [#]   
 S  char[ ID ]
  ST0   [#]   
 S  char[ { ]
  ST0   [#]   
 S  char[ } ]
  ST0   [#]   

IState ID 9 :
 S  char[ if ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 CS  char[ } ]
  [#]   S0   CS0   
 CS  char[ } ]
  S0   [#]   CS0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 CS  char[ } ]
  [#]   S0   
 CS  char[ } ]
  S0   [#]   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   

IState ID 10 :
 ST  char[ if ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  if1   [#]   (1   BEp0   )1   then1   S0   

IState ID 11 :
 D  char[ int ]
  D0   int1   [#]   ID1   ;1   
 D  char[ if ]
  D0   int1   [#]   ID1   ;1   
 D  char[ while ]
  D0   int1   [#]   ID1   ;1   
 D  char[ ID ]
  D0   int1   [#]   ID1   ;1   
 D  char[ { ]
  D0   int1   [#]   ID1   ;1   

IState ID 12 :
 NST  char[ if ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  while1   [#]   (1   BEp0   )1   do1   S0   

IState ID 13 :
 S  char[ if ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 CS  char[ } ]
  [#]   S0   CS0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 CS  char[ } ]
  [#]   S0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   
 NST  char[ if ]
  {1   [#]   CS0   }1   
 NST  char[ while ]
  {1   [#]   CS0   }1   
 NST  char[ ID ]
  {1   [#]   CS0   }1   
 NST  char[ { ]
  {1   [#]   CS0   }1   
 NST  char[ } ]
  {1   [#]   CS0   }1   

IState ID 14 :
 D  char[ int ]
  int1   ID1   [#]   ;1   
 D  char[ if ]
  int1   ID1   [#]   ;1   
 D  char[ while ]
  int1   ID1   [#]   ;1   
 D  char[ ID ]
  int1   ID1   [#]   ;1   
 D  char[ { ]
  int1   ID1   [#]   ;1   

IState ID 15 :
 P  char[ # ]
  {1   D0   CS0   }1   [#]   

IState ID 16 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ; ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ; ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ; ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ; ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ; ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ; ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   
 NST  char[ if ]
  ID1   =1   [#]   CEp0   ;1   
 NST  char[ while ]
  ID1   =1   [#]   CEp0   ;1   
 NST  char[ ID ]
  ID1   =1   [#]   CEp0   ;1   
 NST  char[ { ]
  ID1   =1   [#]   CEp0   ;1   
 NST  char[ } ]
  ID1   =1   [#]   CEp0   ;1   

IState ID 17 :
 CS  char[ } ]
  S0   CS0   [#]   

IState ID 18 :
 BEp  char[ or ]
  [#]   BET0   
 BEp  char[ ) ]
  [#]   BET0   
 BEp  char[ or ]
  [#]   BEp0   or1   BET0   
 BEp  char[ ) ]
  [#]   BEp0   or1   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   
 ST  char[ if ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 ST  char[ while ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 ST  char[ ID ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 ST  char[ { ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 ST  char[ } ]
  if1   (1   [#]   BEp0   )1   then1   S0   

IState ID 19 :
 D  char[ int ]
  D0   int1   ID1   [#]   ;1   
 D  char[ if ]
  D0   int1   ID1   [#]   ;1   
 D  char[ while ]
  D0   int1   ID1   [#]   ;1   
 D  char[ ID ]
  D0   int1   ID1   [#]   ;1   
 D  char[ { ]
  D0   int1   ID1   [#]   ;1   

IState ID 20 :
 BEp  char[ or ]
  [#]   BET0   
 BEp  char[ ) ]
  [#]   BET0   
 BEp  char[ or ]
  [#]   BEp0   or1   BET0   
 BEp  char[ ) ]
  [#]   BEp0   or1   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   
 NST  char[ if ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 NST  char[ while ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 NST  char[ ID ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 NST  char[ { ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 NST  char[ } ]
  while1   (1   [#]   BEp0   )1   do1   S0   

IState ID 21 :
 NST  char[ if ]
  {1   CS0   [#]   }1   
 NST  char[ while ]
  {1   CS0   [#]   }1   
 NST  char[ ID ]
  {1   CS0   [#]   }1   
 NST  char[ { ]
  {1   CS0   [#]   }1   
 NST  char[ } ]
  {1   CS0   [#]   }1   

IState ID 22 :
 D  char[ int ]
  int1   ID1   ;1   [#]   
 D  char[ if ]
  int1   ID1   ;1   [#]   
 D  char[ while ]
  int1   ID1   ;1   [#]   
 D  char[ ID ]
  int1   ID1   ;1   [#]   
 D  char[ { ]
  int1   ID1   ;1   [#]   

IState ID 23 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  (1   [#]   CEp0   )1   
 CEF  char[ - ]
  (1   [#]   CEp0   )1   
 CEF  char[ * ]
  (1   [#]   CEp0   )1   
 CEF  char[ / ]
  (1   [#]   CEp0   )1   
 CEF  char[ ; ]
  (1   [#]   CEp0   )1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 24 :
 CET  char[ + ]
  CEF0   [#]   
 CET  char[ - ]
  CEF0   [#]   
 CET  char[ * ]
  CEF0   [#]   
 CET  char[ / ]
  CEF0   [#]   
 CET  char[ ; ]
  CEF0   [#]   

IState ID 25 :
 CEp  char[ + ]
  CET0   [#]   
 CEp  char[ - ]
  CET0   [#]   
 CEp  char[ ; ]
  CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ; ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ; ]
  CET0   [#]   /1   CEF0   

IState ID 26 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ; ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ; ]
  CEp0   [#]   -1   CET0   
 NST  char[ if ]
  ID1   =1   CEp0   [#]   ;1   
 NST  char[ while ]
  ID1   =1   CEp0   [#]   ;1   
 NST  char[ ID ]
  ID1   =1   CEp0   [#]   ;1   
 NST  char[ { ]
  ID1   =1   CEp0   [#]   ;1   
 NST  char[ } ]
  ID1   =1   CEp0   [#]   ;1   

IState ID 27 :
 CEF  char[ + ]
  ID1   [#]   
 CEF  char[ - ]
  ID1   [#]   
 CEF  char[ * ]
  ID1   [#]   
 CEF  char[ / ]
  ID1   [#]   
 CEF  char[ ; ]
  ID1   [#]   

IState ID 28 :
 CEF  char[ + ]
  NUM1   [#]   
 CEF  char[ - ]
  NUM1   [#]   
 CEF  char[ * ]
  NUM1   [#]   
 CEF  char[ / ]
  NUM1   [#]   
 CEF  char[ ; ]
  NUM1   [#]   

IState ID 29 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  (1   [#]   CEp0   )1   
 CEF  char[ - ]
  (1   [#]   CEp0   )1   
 CEF  char[ * ]
  (1   [#]   CEp0   )1   
 CEF  char[ / ]
  (1   [#]   CEp0   )1   
 CEF  char[ and ]
  (1   [#]   CEp0   )1   
 CEF  char[ or ]
  (1   [#]   CEp0   )1   
 CEF  char[ ) ]
  (1   [#]   CEp0   )1   
 CEF  char[ relop ]
  (1   [#]   CEp0   )1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 30 :
 BET  char[ and ]
  BEF0   [#]   
 BET  char[ or ]
  BEF0   [#]   
 BET  char[ ) ]
  BEF0   [#]   

IState ID 31 :
 BEp  char[ or ]
  BET0   [#]   
 BEp  char[ ) ]
  BET0   [#]   
 BET  char[ and ]
  BET0   [#]   and1   BEF0   
 BET  char[ or ]
  BET0   [#]   and1   BEF0   
 BET  char[ ) ]
  BET0   [#]   and1   BEF0   

IState ID 32 :
 BEp  char[ or ]
  BEp0   [#]   or1   BET0   
 BEp  char[ ) ]
  BEp0   [#]   or1   BET0   
 ST  char[ if ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ while ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ { ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ } ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 ST  char[ while ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 ST  char[ { ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 ST  char[ } ]
  if1   (1   BEp0   [#]   )1   then1   S0   

IState ID 33 :
 CET  char[ + ]
  CEF0   [#]   
 CET  char[ - ]
  CEF0   [#]   
 CET  char[ * ]
  CEF0   [#]   
 CET  char[ / ]
  CEF0   [#]   
 CET  char[ and ]
  CEF0   [#]   
 CET  char[ or ]
  CEF0   [#]   
 CET  char[ ) ]
  CEF0   [#]   
 CET  char[ relop ]
  CEF0   [#]   

IState ID 34 :
 CEp  char[ + ]
  CET0   [#]   
 CEp  char[ - ]
  CET0   [#]   
 CEp  char[ and ]
  CET0   [#]   
 CEp  char[ or ]
  CET0   [#]   
 CEp  char[ ) ]
  CET0   [#]   
 CEp  char[ relop ]
  CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ relop ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   
 CET  char[ relop ]
  CET0   [#]   /1   CEF0   

IState ID 35 :
 BEF  char[ and ]
  CEp0   [#]   relop1   CEp0   
 BEF  char[ or ]
  CEp0   [#]   relop1   CEp0   
 BEF  char[ ) ]
  CEp0   [#]   relop1   CEp0   
 BEF  char[ and ]
  CEp0   [#]   
 BEF  char[ or ]
  CEp0   [#]   
 BEF  char[ ) ]
  CEp0   [#]   
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ and ]
  CEp0   [#]   +1   CET0   
 CEp  char[ or ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ relop ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ and ]
  CEp0   [#]   -1   CET0   
 CEp  char[ or ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEp  char[ relop ]
  CEp0   [#]   -1   CET0   

IState ID 36 :
 CEF  char[ + ]
  ID1   [#]   
 CEF  char[ - ]
  ID1   [#]   
 CEF  char[ * ]
  ID1   [#]   
 CEF  char[ / ]
  ID1   [#]   
 CEF  char[ and ]
  ID1   [#]   
 CEF  char[ or ]
  ID1   [#]   
 CEF  char[ ) ]
  ID1   [#]   
 CEF  char[ relop ]
  ID1   [#]   

IState ID 37 :
 CEF  char[ + ]
  NUM1   [#]   
 CEF  char[ - ]
  NUM1   [#]   
 CEF  char[ * ]
  NUM1   [#]   
 CEF  char[ / ]
  NUM1   [#]   
 CEF  char[ and ]
  NUM1   [#]   
 CEF  char[ or ]
  NUM1   [#]   
 CEF  char[ ) ]
  NUM1   [#]   
 CEF  char[ relop ]
  NUM1   [#]   

IState ID 38 :
 D  char[ int ]
  D0   int1   ID1   ;1   [#]   
 D  char[ if ]
  D0   int1   ID1   ;1   [#]   
 D  char[ while ]
  D0   int1   ID1   ;1   [#]   
 D  char[ ID ]
  D0   int1   ID1   ;1   [#]   
 D  char[ { ]
  D0   int1   ID1   ;1   [#]   

IState ID 39 :
 BEp  char[ or ]
  BEp0   [#]   or1   BET0   
 BEp  char[ ) ]
  BEp0   [#]   or1   BET0   
 NST  char[ if ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 NST  char[ while ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 NST  char[ ID ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 NST  char[ { ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 NST  char[ } ]
  while1   (1   BEp0   [#]   )1   do1   S0   

IState ID 40 :
 NST  char[ if ]
  {1   CS0   }1   [#]   
 NST  char[ while ]
  {1   CS0   }1   [#]   
 NST  char[ ID ]
  {1   CS0   }1   [#]   
 NST  char[ { ]
  {1   CS0   }1   [#]   
 NST  char[ } ]
  {1   CS0   }1   [#]   

IState ID 41 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  (1   [#]   CEp0   )1   
 CEF  char[ - ]
  (1   [#]   CEp0   )1   
 CEF  char[ * ]
  (1   [#]   CEp0   )1   
 CEF  char[ / ]
  (1   [#]   CEp0   )1   
 CEF  char[ ) ]
  (1   [#]   CEp0   )1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 42 :
 CET  char[ + ]
  CEF0   [#]   
 CET  char[ - ]
  CEF0   [#]   
 CET  char[ * ]
  CEF0   [#]   
 CET  char[ / ]
  CEF0   [#]   
 CET  char[ ) ]
  CEF0   [#]   

IState ID 43 :
 CEp  char[ + ]
  CET0   [#]   
 CEp  char[ - ]
  CET0   [#]   
 CEp  char[ ) ]
  CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 44 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEF  char[ + ]
  (1   CEp0   [#]   )1   
 CEF  char[ - ]
  (1   CEp0   [#]   )1   
 CEF  char[ * ]
  (1   CEp0   [#]   )1   
 CEF  char[ / ]
  (1   CEp0   [#]   )1   
 CEF  char[ ; ]
  (1   CEp0   [#]   )1   

IState ID 45 :
 CEF  char[ + ]
  ID1   [#]   
 CEF  char[ - ]
  ID1   [#]   
 CEF  char[ * ]
  ID1   [#]   
 CEF  char[ / ]
  ID1   [#]   
 CEF  char[ ) ]
  ID1   [#]   

IState ID 46 :
 CEF  char[ + ]
  NUM1   [#]   
 CEF  char[ - ]
  NUM1   [#]   
 CEF  char[ * ]
  NUM1   [#]   
 CEF  char[ / ]
  NUM1   [#]   
 CEF  char[ ) ]
  NUM1   [#]   

IState ID 47 :
 CET  char[ + ]
  CET0   *1   [#]   CEF0   
 CET  char[ - ]
  CET0   *1   [#]   CEF0   
 CET  char[ * ]
  CET0   *1   [#]   CEF0   
 CET  char[ / ]
  CET0   *1   [#]   CEF0   
 CET  char[ ; ]
  CET0   *1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 48 :
 CET  char[ + ]
  CET0   /1   [#]   CEF0   
 CET  char[ - ]
  CET0   /1   [#]   CEF0   
 CET  char[ * ]
  CET0   /1   [#]   CEF0   
 CET  char[ / ]
  CET0   /1   [#]   CEF0   
 CET  char[ ; ]
  CET0   /1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 49 :
 CEp  char[ + ]
  CEp0   +1   [#]   CET0   
 CEp  char[ - ]
  CEp0   +1   [#]   CET0   
 CEp  char[ ; ]
  CEp0   +1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ; ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ; ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ; ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 50 :
 CEp  char[ + ]
  CEp0   -1   [#]   CET0   
 CEp  char[ - ]
  CEp0   -1   [#]   CET0   
 CEp  char[ ; ]
  CEp0   -1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ; ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ; ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ; ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 51 :
 NST  char[ if ]
  ID1   =1   CEp0   ;1   [#]   
 NST  char[ while ]
  ID1   =1   CEp0   ;1   [#]   
 NST  char[ ID ]
  ID1   =1   CEp0   ;1   [#]   
 NST  char[ { ]
  ID1   =1   CEp0   ;1   [#]   
 NST  char[ } ]
  ID1   =1   CEp0   ;1   [#]   

IState ID 52 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEF  char[ + ]
  (1   CEp0   [#]   )1   
 CEF  char[ - ]
  (1   CEp0   [#]   )1   
 CEF  char[ * ]
  (1   CEp0   [#]   )1   
 CEF  char[ / ]
  (1   CEp0   [#]   )1   
 CEF  char[ and ]
  (1   CEp0   [#]   )1   
 CEF  char[ or ]
  (1   CEp0   [#]   )1   
 CEF  char[ ) ]
  (1   CEp0   [#]   )1   
 CEF  char[ relop ]
  (1   CEp0   [#]   )1   

IState ID 53 :
 BET  char[ and ]
  BET0   and1   [#]   BEF0   
 BET  char[ or ]
  BET0   and1   [#]   BEF0   
 BET  char[ ) ]
  BET0   and1   [#]   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 54 :
 ST  char[ if ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   [#]   then1   S0   

IState ID 55 :
 BEp  char[ or ]
  BEp0   or1   [#]   BET0   
 BEp  char[ ) ]
  BEp0   or1   [#]   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 56 :
 CET  char[ + ]
  CET0   *1   [#]   CEF0   
 CET  char[ - ]
  CET0   *1   [#]   CEF0   
 CET  char[ * ]
  CET0   *1   [#]   CEF0   
 CET  char[ / ]
  CET0   *1   [#]   CEF0   
 CET  char[ and ]
  CET0   *1   [#]   CEF0   
 CET  char[ or ]
  CET0   *1   [#]   CEF0   
 CET  char[ ) ]
  CET0   *1   [#]   CEF0   
 CET  char[ relop ]
  CET0   *1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 57 :
 CET  char[ + ]
  CET0   /1   [#]   CEF0   
 CET  char[ - ]
  CET0   /1   [#]   CEF0   
 CET  char[ * ]
  CET0   /1   [#]   CEF0   
 CET  char[ / ]
  CET0   /1   [#]   CEF0   
 CET  char[ and ]
  CET0   /1   [#]   CEF0   
 CET  char[ or ]
  CET0   /1   [#]   CEF0   
 CET  char[ ) ]
  CET0   /1   [#]   CEF0   
 CET  char[ relop ]
  CET0   /1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 58 :
 CEp  char[ + ]
  CEp0   +1   [#]   CET0   
 CEp  char[ - ]
  CEp0   +1   [#]   CET0   
 CEp  char[ and ]
  CEp0   +1   [#]   CET0   
 CEp  char[ or ]
  CEp0   +1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   +1   [#]   CET0   
 CEp  char[ relop ]
  CEp0   +1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 59 :
 CEp  char[ + ]
  CEp0   -1   [#]   CET0   
 CEp  char[ - ]
  CEp0   -1   [#]   CET0   
 CEp  char[ and ]
  CEp0   -1   [#]   CET0   
 CEp  char[ or ]
  CEp0   -1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   -1   [#]   CET0   
 CEp  char[ relop ]
  CEp0   -1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 60 :
 BEF  char[ and ]
  CEp0   relop1   [#]   CEp0   
 BEF  char[ or ]
  CEp0   relop1   [#]   CEp0   
 BEF  char[ ) ]
  CEp0   relop1   [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 61 :
 NST  char[ if ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 NST  char[ while ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 NST  char[ ID ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 NST  char[ { ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 NST  char[ } ]
  while1   (1   BEp0   )1   [#]   do1   S0   

IState ID 62 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEF  char[ + ]
  (1   CEp0   [#]   )1   
 CEF  char[ - ]
  (1   CEp0   [#]   )1   
 CEF  char[ * ]
  (1   CEp0   [#]   )1   
 CEF  char[ / ]
  (1   CEp0   [#]   )1   
 CEF  char[ ) ]
  (1   CEp0   [#]   )1   

IState ID 63 :
 CET  char[ + ]
  CET0   *1   [#]   CEF0   
 CET  char[ - ]
  CET0   *1   [#]   CEF0   
 CET  char[ * ]
  CET0   *1   [#]   CEF0   
 CET  char[ / ]
  CET0   *1   [#]   CEF0   
 CET  char[ ) ]
  CET0   *1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 64 :
 CET  char[ + ]
  CET0   /1   [#]   CEF0   
 CET  char[ - ]
  CET0   /1   [#]   CEF0   
 CET  char[ * ]
  CET0   /1   [#]   CEF0   
 CET  char[ / ]
  CET0   /1   [#]   CEF0   
 CET  char[ ) ]
  CET0   /1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 65 :
 CEF  char[ + ]
  (1   CEp0   )1   [#]   
 CEF  char[ - ]
  (1   CEp0   )1   [#]   
 CEF  char[ * ]
  (1   CEp0   )1   [#]   
 CEF  char[ / ]
  (1   CEp0   )1   [#]   
 CEF  char[ ; ]
  (1   CEp0   )1   [#]   

IState ID 66 :
 CEp  char[ + ]
  CEp0   +1   [#]   CET0   
 CEp  char[ - ]
  CEp0   +1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   +1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 67 :
 CEp  char[ + ]
  CEp0   -1   [#]   CET0   
 CEp  char[ - ]
  CEp0   -1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   -1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 68 :
 CET  char[ + ]
  CET0   *1   CEF0   [#]   
 CET  char[ - ]
  CET0   *1   CEF0   [#]   
 CET  char[ * ]
  CET0   *1   CEF0   [#]   
 CET  char[ / ]
  CET0   *1   CEF0   [#]   
 CET  char[ ; ]
  CET0   *1   CEF0   [#]   

IState ID 69 :
 CET  char[ + ]
  CET0   /1   CEF0   [#]   
 CET  char[ - ]
  CET0   /1   CEF0   [#]   
 CET  char[ * ]
  CET0   /1   CEF0   [#]   
 CET  char[ / ]
  CET0   /1   CEF0   [#]   
 CET  char[ ; ]
  CET0   /1   CEF0   [#]   

IState ID 70 :
 CEp  char[ + ]
  CEp0   +1   CET0   [#]   
 CEp  char[ - ]
  CEp0   +1   CET0   [#]   
 CEp  char[ ; ]
  CEp0   +1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ; ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ; ]
  CET0   [#]   /1   CEF0   

IState ID 71 :
 CEp  char[ + ]
  CEp0   -1   CET0   [#]   
 CEp  char[ - ]
  CEp0   -1   CET0   [#]   
 CEp  char[ ; ]
  CEp0   -1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ; ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ; ]
  CET0   [#]   /1   CEF0   

IState ID 72 :
 CEF  char[ + ]
  (1   CEp0   )1   [#]   
 CEF  char[ - ]
  (1   CEp0   )1   [#]   
 CEF  char[ * ]
  (1   CEp0   )1   [#]   
 CEF  char[ / ]
  (1   CEp0   )1   [#]   
 CEF  char[ and ]
  (1   CEp0   )1   [#]   
 CEF  char[ or ]
  (1   CEp0   )1   [#]   
 CEF  char[ ) ]
  (1   CEp0   )1   [#]   
 CEF  char[ relop ]
  (1   CEp0   )1   [#]   

IState ID 73 :
 BET  char[ and ]
  BET0   and1   BEF0   [#]   
 BET  char[ or ]
  BET0   and1   BEF0   [#]   
 BET  char[ ) ]
  BET0   and1   BEF0   [#]   

IState ID 74 :
 S  char[ if ]
  [#]   ST0   
 S  char[ else ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ else ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ else ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ else ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ else ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   

IState ID 75 :
 BEp  char[ or ]
  BEp0   or1   BET0   [#]   
 BEp  char[ ) ]
  BEp0   or1   BET0   [#]   
 BET  char[ and ]
  BET0   [#]   and1   BEF0   
 BET  char[ or ]
  BET0   [#]   and1   BEF0   
 BET  char[ ) ]
  BET0   [#]   and1   BEF0   

IState ID 76 :
 CET  char[ + ]
  CET0   *1   CEF0   [#]   
 CET  char[ - ]
  CET0   *1   CEF0   [#]   
 CET  char[ * ]
  CET0   *1   CEF0   [#]   
 CET  char[ / ]
  CET0   *1   CEF0   [#]   
 CET  char[ and ]
  CET0   *1   CEF0   [#]   
 CET  char[ or ]
  CET0   *1   CEF0   [#]   
 CET  char[ ) ]
  CET0   *1   CEF0   [#]   
 CET  char[ relop ]
  CET0   *1   CEF0   [#]   

IState ID 77 :
 CET  char[ + ]
  CET0   /1   CEF0   [#]   
 CET  char[ - ]
  CET0   /1   CEF0   [#]   
 CET  char[ * ]
  CET0   /1   CEF0   [#]   
 CET  char[ / ]
  CET0   /1   CEF0   [#]   
 CET  char[ and ]
  CET0   /1   CEF0   [#]   
 CET  char[ or ]
  CET0   /1   CEF0   [#]   
 CET  char[ ) ]
  CET0   /1   CEF0   [#]   
 CET  char[ relop ]
  CET0   /1   CEF0   [#]   

IState ID 78 :
 CEp  char[ + ]
  CEp0   +1   CET0   [#]   
 CEp  char[ - ]
  CEp0   +1   CET0   [#]   
 CEp  char[ and ]
  CEp0   +1   CET0   [#]   
 CEp  char[ or ]
  CEp0   +1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   +1   CET0   [#]   
 CEp  char[ relop ]
  CEp0   +1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ relop ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   
 CET  char[ relop ]
  CET0   [#]   /1   CEF0   

IState ID 79 :
 CEp  char[ + ]
  CEp0   -1   CET0   [#]   
 CEp  char[ - ]
  CEp0   -1   CET0   [#]   
 CEp  char[ and ]
  CEp0   -1   CET0   [#]   
 CEp  char[ or ]
  CEp0   -1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   -1   CET0   [#]   
 CEp  char[ relop ]
  CEp0   -1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ relop ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   
 CET  char[ relop ]
  CET0   [#]   /1   CEF0   

IState ID 80 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  (1   [#]   CEp0   )1   
 CEF  char[ - ]
  (1   [#]   CEp0   )1   
 CEF  char[ * ]
  (1   [#]   CEp0   )1   
 CEF  char[ / ]
  (1   [#]   CEp0   )1   
 CEF  char[ and ]
  (1   [#]   CEp0   )1   
 CEF  char[ or ]
  (1   [#]   CEp0   )1   
 CEF  char[ ) ]
  (1   [#]   CEp0   )1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 81 :
 CET  char[ + ]
  CEF0   [#]   
 CET  char[ - ]
  CEF0   [#]   
 CET  char[ * ]
  CEF0   [#]   
 CET  char[ / ]
  CEF0   [#]   
 CET  char[ and ]
  CEF0   [#]   
 CET  char[ or ]
  CEF0   [#]   
 CET  char[ ) ]
  CEF0   [#]   

IState ID 82 :
 CEp  char[ + ]
  CET0   [#]   
 CEp  char[ - ]
  CET0   [#]   
 CEp  char[ and ]
  CET0   [#]   
 CEp  char[ or ]
  CET0   [#]   
 CEp  char[ ) ]
  CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 83 :
 BEF  char[ and ]
  CEp0   relop1   CEp0   [#]   
 BEF  char[ or ]
  CEp0   relop1   CEp0   [#]   
 BEF  char[ ) ]
  CEp0   relop1   CEp0   [#]   
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ and ]
  CEp0   [#]   +1   CET0   
 CEp  char[ or ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ and ]
  CEp0   [#]   -1   CET0   
 CEp  char[ or ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   

IState ID 84 :
 CEF  char[ + ]
  ID1   [#]   
 CEF  char[ - ]
  ID1   [#]   
 CEF  char[ * ]
  ID1   [#]   
 CEF  char[ / ]
  ID1   [#]   
 CEF  char[ and ]
  ID1   [#]   
 CEF  char[ or ]
  ID1   [#]   
 CEF  char[ ) ]
  ID1   [#]   

IState ID 85 :
 CEF  char[ + ]
  NUM1   [#]   
 CEF  char[ - ]
  NUM1   [#]   
 CEF  char[ * ]
  NUM1   [#]   
 CEF  char[ / ]
  NUM1   [#]   
 CEF  char[ and ]
  NUM1   [#]   
 CEF  char[ or ]
  NUM1   [#]   
 CEF  char[ ) ]
  NUM1   [#]   

IState ID 86 :
 S  char[ if ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ while ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ ID ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ { ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ } ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   

IState ID 87 :
 CEF  char[ + ]
  (1   CEp0   )1   [#]   
 CEF  char[ - ]
  (1   CEp0   )1   [#]   
 CEF  char[ * ]
  (1   CEp0   )1   [#]   
 CEF  char[ / ]
  (1   CEp0   )1   [#]   
 CEF  char[ ) ]
  (1   CEp0   )1   [#]   

IState ID 88 :
 CET  char[ + ]
  CET0   *1   CEF0   [#]   
 CET  char[ - ]
  CET0   *1   CEF0   [#]   
 CET  char[ * ]
  CET0   *1   CEF0   [#]   
 CET  char[ / ]
  CET0   *1   CEF0   [#]   
 CET  char[ ) ]
  CET0   *1   CEF0   [#]   

IState ID 89 :
 CET  char[ + ]
  CET0   /1   CEF0   [#]   
 CET  char[ - ]
  CET0   /1   CEF0   [#]   
 CET  char[ * ]
  CET0   /1   CEF0   [#]   
 CET  char[ / ]
  CET0   /1   CEF0   [#]   
 CET  char[ ) ]
  CET0   /1   CEF0   [#]   

IState ID 90 :
 CEp  char[ + ]
  CEp0   +1   CET0   [#]   
 CEp  char[ - ]
  CEp0   +1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   +1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 91 :
 CEp  char[ + ]
  CEp0   -1   CET0   [#]   
 CEp  char[ - ]
  CEp0   -1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   -1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 92 :
 NST  char[ if ]
  ID1   [#]   =1   CEp0   ;1   
 NST  char[ else ]
  ID1   [#]   =1   CEp0   ;1   
 NST  char[ while ]
  ID1   [#]   =1   CEp0   ;1   
 NST  char[ ID ]
  ID1   [#]   =1   CEp0   ;1   
 NST  char[ { ]
  ID1   [#]   =1   CEp0   ;1   
 NST  char[ } ]
  ID1   [#]   =1   CEp0   ;1   

IState ID 93 :
 S  char[ if ]
  NST0   [#]   
 S  char[ else ]
  NST0   [#]   
 S  char[ while ]
  NST0   [#]   
 S  char[ ID ]
  NST0   [#]   
 S  char[ { ]
  NST0   [#]   
 S  char[ } ]
  NST0   [#]   

IState ID 94 :
 S  char[ if ]
  ST0   [#]   
 S  char[ else ]
  ST0   [#]   
 S  char[ while ]
  ST0   [#]   
 S  char[ ID ]
  ST0   [#]   
 S  char[ { ]
  ST0   [#]   
 S  char[ } ]
  ST0   [#]   

IState ID 95 :
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   

IState ID 96 :
 ST  char[ if ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ else ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 ST  char[ else ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  if1   [#]   (1   BEp0   )1   then1   S0   

IState ID 97 :
 NST  char[ if ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 NST  char[ else ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  while1   [#]   (1   BEp0   )1   do1   S0   

IState ID 98 :
 S  char[ if ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 CS  char[ } ]
  [#]   S0   CS0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 CS  char[ } ]
  [#]   S0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   
 NST  char[ if ]
  {1   [#]   CS0   }1   
 NST  char[ else ]
  {1   [#]   CS0   }1   
 NST  char[ while ]
  {1   [#]   CS0   }1   
 NST  char[ ID ]
  {1   [#]   CS0   }1   
 NST  char[ { ]
  {1   [#]   CS0   }1   
 NST  char[ } ]
  {1   [#]   CS0   }1   

IState ID 99 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEF  char[ + ]
  (1   CEp0   [#]   )1   
 CEF  char[ - ]
  (1   CEp0   [#]   )1   
 CEF  char[ * ]
  (1   CEp0   [#]   )1   
 CEF  char[ / ]
  (1   CEp0   [#]   )1   
 CEF  char[ and ]
  (1   CEp0   [#]   )1   
 CEF  char[ or ]
  (1   CEp0   [#]   )1   
 CEF  char[ ) ]
  (1   CEp0   [#]   )1   

IState ID 100 :
 CET  char[ + ]
  CET0   *1   [#]   CEF0   
 CET  char[ - ]
  CET0   *1   [#]   CEF0   
 CET  char[ * ]
  CET0   *1   [#]   CEF0   
 CET  char[ / ]
  CET0   *1   [#]   CEF0   
 CET  char[ and ]
  CET0   *1   [#]   CEF0   
 CET  char[ or ]
  CET0   *1   [#]   CEF0   
 CET  char[ ) ]
  CET0   *1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 101 :
 CET  char[ + ]
  CET0   /1   [#]   CEF0   
 CET  char[ - ]
  CET0   /1   [#]   CEF0   
 CET  char[ * ]
  CET0   /1   [#]   CEF0   
 CET  char[ / ]
  CET0   /1   [#]   CEF0   
 CET  char[ and ]
  CET0   /1   [#]   CEF0   
 CET  char[ or ]
  CET0   /1   [#]   CEF0   
 CET  char[ ) ]
  CET0   /1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 102 :
 CEp  char[ + ]
  CEp0   +1   [#]   CET0   
 CEp  char[ - ]
  CEp0   +1   [#]   CET0   
 CEp  char[ and ]
  CEp0   +1   [#]   CET0   
 CEp  char[ or ]
  CEp0   +1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   +1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 103 :
 CEp  char[ + ]
  CEp0   -1   [#]   CET0   
 CEp  char[ - ]
  CEp0   -1   [#]   CET0   
 CEp  char[ and ]
  CEp0   -1   [#]   CET0   
 CEp  char[ or ]
  CEp0   -1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   -1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 104 :
 NST  char[ if ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 NST  char[ while ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 NST  char[ ID ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 NST  char[ { ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 NST  char[ } ]
  while1   (1   BEp0   )1   do1   S0   [#]   

IState ID 105 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ; ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ; ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ; ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ; ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ; ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ; ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   
 NST  char[ if ]
  ID1   =1   [#]   CEp0   ;1   
 NST  char[ else ]
  ID1   =1   [#]   CEp0   ;1   
 NST  char[ while ]
  ID1   =1   [#]   CEp0   ;1   
 NST  char[ ID ]
  ID1   =1   [#]   CEp0   ;1   
 NST  char[ { ]
  ID1   =1   [#]   CEp0   ;1   
 NST  char[ } ]
  ID1   =1   [#]   CEp0   ;1   

IState ID 106 :
 S  char[ if ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   

IState ID 107 :
 BEp  char[ or ]
  [#]   BET0   
 BEp  char[ ) ]
  [#]   BET0   
 BEp  char[ or ]
  [#]   BEp0   or1   BET0   
 BEp  char[ ) ]
  [#]   BEp0   or1   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   
 ST  char[ if ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ else ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 ST  char[ else ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 ST  char[ while ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 ST  char[ ID ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 ST  char[ { ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 ST  char[ } ]
  if1   (1   [#]   BEp0   )1   then1   S0   

IState ID 108 :
 BEp  char[ or ]
  [#]   BET0   
 BEp  char[ ) ]
  [#]   BET0   
 BEp  char[ or ]
  [#]   BEp0   or1   BET0   
 BEp  char[ ) ]
  [#]   BEp0   or1   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   
 NST  char[ if ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 NST  char[ else ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 NST  char[ while ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 NST  char[ ID ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 NST  char[ { ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 NST  char[ } ]
  while1   (1   [#]   BEp0   )1   do1   S0   

IState ID 109 :
 NST  char[ if ]
  {1   CS0   [#]   }1   
 NST  char[ else ]
  {1   CS0   [#]   }1   
 NST  char[ while ]
  {1   CS0   [#]   }1   
 NST  char[ ID ]
  {1   CS0   [#]   }1   
 NST  char[ { ]
  {1   CS0   [#]   }1   
 NST  char[ } ]
  {1   CS0   [#]   }1   

IState ID 110 :
 CEF  char[ + ]
  (1   CEp0   )1   [#]   
 CEF  char[ - ]
  (1   CEp0   )1   [#]   
 CEF  char[ * ]
  (1   CEp0   )1   [#]   
 CEF  char[ / ]
  (1   CEp0   )1   [#]   
 CEF  char[ and ]
  (1   CEp0   )1   [#]   
 CEF  char[ or ]
  (1   CEp0   )1   [#]   
 CEF  char[ ) ]
  (1   CEp0   )1   [#]   

IState ID 111 :
 CET  char[ + ]
  CET0   *1   CEF0   [#]   
 CET  char[ - ]
  CET0   *1   CEF0   [#]   
 CET  char[ * ]
  CET0   *1   CEF0   [#]   
 CET  char[ / ]
  CET0   *1   CEF0   [#]   
 CET  char[ and ]
  CET0   *1   CEF0   [#]   
 CET  char[ or ]
  CET0   *1   CEF0   [#]   
 CET  char[ ) ]
  CET0   *1   CEF0   [#]   

IState ID 112 :
 CET  char[ + ]
  CET0   /1   CEF0   [#]   
 CET  char[ - ]
  CET0   /1   CEF0   [#]   
 CET  char[ * ]
  CET0   /1   CEF0   [#]   
 CET  char[ / ]
  CET0   /1   CEF0   [#]   
 CET  char[ and ]
  CET0   /1   CEF0   [#]   
 CET  char[ or ]
  CET0   /1   CEF0   [#]   
 CET  char[ ) ]
  CET0   /1   CEF0   [#]   

IState ID 113 :
 CEp  char[ + ]
  CEp0   +1   CET0   [#]   
 CEp  char[ - ]
  CEp0   +1   CET0   [#]   
 CEp  char[ and ]
  CEp0   +1   CET0   [#]   
 CEp  char[ or ]
  CEp0   +1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   +1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 114 :
 CEp  char[ + ]
  CEp0   -1   CET0   [#]   
 CEp  char[ - ]
  CEp0   -1   CET0   [#]   
 CEp  char[ and ]
  CEp0   -1   CET0   [#]   
 CEp  char[ or ]
  CEp0   -1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   -1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 115 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ; ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ; ]
  CEp0   [#]   -1   CET0   
 NST  char[ if ]
  ID1   =1   CEp0   [#]   ;1   
 NST  char[ else ]
  ID1   =1   CEp0   [#]   ;1   
 NST  char[ while ]
  ID1   =1   CEp0   [#]   ;1   
 NST  char[ ID ]
  ID1   =1   CEp0   [#]   ;1   
 NST  char[ { ]
  ID1   =1   CEp0   [#]   ;1   
 NST  char[ } ]
  ID1   =1   CEp0   [#]   ;1   

IState ID 116 :
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   

IState ID 117 :
 BEp  char[ or ]
  BEp0   [#]   or1   BET0   
 BEp  char[ ) ]
  BEp0   [#]   or1   BET0   
 ST  char[ if ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ else ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ while ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ { ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ } ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 ST  char[ else ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 ST  char[ while ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 ST  char[ { ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 ST  char[ } ]
  if1   (1   BEp0   [#]   )1   then1   S0   

IState ID 118 :
 BEp  char[ or ]
  BEp0   [#]   or1   BET0   
 BEp  char[ ) ]
  BEp0   [#]   or1   BET0   
 NST  char[ if ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 NST  char[ else ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 NST  char[ while ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 NST  char[ ID ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 NST  char[ { ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 NST  char[ } ]
  while1   (1   BEp0   [#]   )1   do1   S0   

IState ID 119 :
 NST  char[ if ]
  {1   CS0   }1   [#]   
 NST  char[ else ]
  {1   CS0   }1   [#]   
 NST  char[ while ]
  {1   CS0   }1   [#]   
 NST  char[ ID ]
  {1   CS0   }1   [#]   
 NST  char[ { ]
  {1   CS0   }1   [#]   
 NST  char[ } ]
  {1   CS0   }1   [#]   

IState ID 120 :
 NST  char[ if ]
  ID1   =1   CEp0   ;1   [#]   
 NST  char[ else ]
  ID1   =1   CEp0   ;1   [#]   
 NST  char[ while ]
  ID1   =1   CEp0   ;1   [#]   
 NST  char[ ID ]
  ID1   =1   CEp0   ;1   [#]   
 NST  char[ { ]
  ID1   =1   CEp0   ;1   [#]   
 NST  char[ } ]
  ID1   =1   CEp0   ;1   [#]   

IState ID 121 :
 ST  char[ if ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ else ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 ST  char[ else ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   [#]   then1   S0   

IState ID 122 :
 NST  char[ if ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 NST  char[ else ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 NST  char[ while ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 NST  char[ ID ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 NST  char[ { ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 NST  char[ } ]
  while1   (1   BEp0   )1   [#]   do1   S0   

IState ID 123 :
 S  char[ if ]
  [#]   ST0   
 S  char[ else ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ else ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ else ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 ST  char[ else ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ else ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ else ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ else ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   

IState ID 124 :
 S  char[ if ]
  [#]   ST0   
 S  char[ else ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ else ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ else ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ else ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ while ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ ID ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ { ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ } ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ else ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ else ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   

IState ID 125 :
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ else ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ else ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   

IState ID 126 :
 NST  char[ if ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 NST  char[ else ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 NST  char[ while ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 NST  char[ ID ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 NST  char[ { ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 NST  char[ } ]
  while1   (1   BEp0   )1   do1   S0   [#]   

IState ID 127 :
 S  char[ if ]
  [#]   ST0   
 S  char[ else ]
  [#]   ST0   
 S  char[ while ]
  [#]   ST0   
 S  char[ ID ]
  [#]   ST0   
 S  char[ { ]
  [#]   ST0   
 S  char[ } ]
  [#]   ST0   
 S  char[ if ]
  [#]   NST0   
 S  char[ else ]
  [#]   NST0   
 S  char[ while ]
  [#]   NST0   
 S  char[ ID ]
  [#]   NST0   
 S  char[ { ]
  [#]   NST0   
 S  char[ } ]
  [#]   NST0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ else ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 ST  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 ST  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 NST  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ else ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 NST  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ else ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 NST  char[ if ]
  [#]   {1   CS0   }1   
 NST  char[ else ]
  [#]   {1   CS0   }1   
 NST  char[ while ]
  [#]   {1   CS0   }1   
 NST  char[ ID ]
  [#]   {1   CS0   }1   
 NST  char[ { ]
  [#]   {1   CS0   }1   
 NST  char[ } ]
  [#]   {1   CS0   }1   

IState ID 128 :
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 ST  char[ else ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   

State ID 0
State ID 1
State ID 2
State ID 3
State ID 4
State ID 5
State ID 6
State ID 7
State ID 8
State ID 9
State ID 10
State ID 11
State ID 12
State ID 13
State ID 14
State ID 15
State ID 16
State ID 17
State ID 18
State ID 19
State ID 20
State ID 21
State ID 22
State ID 23
State ID 24
State ID 25
State ID 26
State ID 27
State ID 28
State ID 29
State ID 30
State ID 31
State ID 32
State ID 33
State ID 34
State ID 35
State ID 36
State ID 37
State ID 38
State ID 39
State ID 40
State ID 41
State ID 42
State ID 43
State ID 44
State ID 45
State ID 46
State ID 47
State ID 48
State ID 49
State ID 50
State ID 51
State ID 52
State ID 53
State ID 54
State ID 55
State ID 56
State ID 57
State ID 58
State ID 59
State ID 60
State ID 61
State ID 62
State ID 63
State ID 64
State ID 65
State ID 66
State ID 67
State ID 68
State ID 69
State ID 70
State ID 71
State ID 72
State ID 73
State ID 74
State ID 75
State ID 76
State ID 77
State ID 78
State ID 79
State ID 80
State ID 81
State ID 82
State ID 83
State ID 84
State ID 85
State ID 86
State ID 87
State ID 88
State ID 89
State ID 90
State ID 91
State ID 92
State ID 93
State ID 94
State ID 95
State ID 96
State ID 97
State ID 98
State ID 99
State ID 100
State ID 101
State ID 102
State ID 103
State ID 104
State ID 105
State ID 106
State ID 107
State ID 108
State ID 109
State ID 110
State ID 111
State ID 112
State ID 113
State ID 114
State ID 115
State ID 116
State ID 117
State ID 118
State ID 119
State ID 120
State ID 121
State ID 122
State ID 123
State ID 124
State ID 125
 ERR: Recur Action Conflict 1
   TransTo127
  Auto-Set Action.preTerm [else] to [#]
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ else ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 ST  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ else ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 ST  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   

State ID 126
State ID 127
State ID 128
		#	(	)	*	+	-	/	;	=	BEF	BET	BEp	CEF	CET	CEp	CS	D	ID	MST	NST	NUM	OST	P	ST	S	_P	and	do	else	if	int	or	relop	then	while	{	}
sta-0	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G1	 	 	 	 	 	 	 	 	 	 	 	 	S2	 	
sta-1	R0	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-2	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G3	 	 	 	 	 	 	 	 	 	 	 	 	 	S4	 	 	 	 	 	 	
sta-3	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G5	 	S6	 	G7	 	 	 	G8	G9	 	 	 	 	S10	S11	 	 	 	S12	S13	 	
sta-4	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S14	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-5	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S15	
sta-6	 	 	 	 	 	 	 	 	S16	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-7	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R5	 	 	 	 	 	 	 	 	 	 	 	R5	 	 	 	 	R5	R5	R5	
sta-8	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R4	 	 	 	 	 	 	 	 	 	 	 	R4	 	 	 	 	R4	R4	R4	
sta-9	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G17	 	S6	 	G7	 	 	 	G8	G9	 	 	 	 	S10	 	 	 	 	S12	S13	R12	
sta-10	 	S18	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-11	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S19	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-12	 	S20	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-13	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G21	 	S6	 	G7	 	 	 	G8	G9	 	 	 	 	S10	 	 	 	 	S12	S13	 	
sta-14	 	 	 	 	 	 	 	S22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-15	R1	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-16	 	S23	 	 	 	 	 	 	 	 	 	 	G24	G25	G26	 	 	S27	 	 	S28	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-17	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R11	
sta-18	 	S29	 	 	 	 	 	 	 	G30	G31	G32	G33	G34	G35	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-19	 	 	 	 	 	 	 	S38	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-20	 	S29	 	 	 	 	 	 	 	G30	G31	G39	G33	G34	G35	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-21	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S40	
sta-22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R3	 	 	 	 	 	 	 	 	 	 	 	R3	R3	 	 	 	R3	R3	 	
sta-23	 	S41	 	 	 	 	 	 	 	 	 	 	G42	G43	G44	 	 	S45	 	 	S46	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-24	 	 	 	R22	R22	R22	R22	R22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-25	 	 	 	S47	R19	R19	S48	R19	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-26	 	 	 	 	S49	S50	 	S51	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-27	 	 	 	R25	R25	R25	R25	R25	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-28	 	 	 	R26	R26	R26	R26	R26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-29	 	S41	 	 	 	 	 	 	 	 	 	 	G42	G43	G52	 	 	S45	 	 	S46	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-30	 	 	R15	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R15	 	 	 	 	R15	 	 	 	 	 	
sta-31	 	 	R13	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S53	 	 	 	 	R13	 	 	 	 	 	
sta-32	 	 	S54	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S55	 	 	 	 	 	
sta-33	 	 	R22	R22	R22	R22	R22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R22	 	 	 	 	R22	R22	 	 	 	 	
sta-34	 	 	R19	S56	R19	R19	S57	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R19	 	 	 	 	R19	R19	 	 	 	 	
sta-35	 	 	R18	 	S58	S59	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R18	 	 	 	 	R18	S60	 	 	 	 	
sta-36	 	 	R25	R25	R25	R25	R25	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R25	 	 	 	 	R25	R25	 	 	 	 	
sta-37	 	 	R26	R26	R26	R26	R26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R26	 	 	 	 	R26	R26	 	 	 	 	
sta-38	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R2	 	 	 	 	 	 	 	 	 	 	 	R2	R2	 	 	 	R2	R2	 	
sta-39	 	 	S61	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S55	 	 	 	 	 	
sta-40	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R10	 	 	 	 	 	 	 	 	 	 	 	R10	 	 	 	 	R10	R10	R10	
sta-41	 	S41	 	 	 	 	 	 	 	 	 	 	G42	G43	G62	 	 	S45	 	 	S46	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-42	 	 	R22	R22	R22	R22	R22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-43	 	 	R19	S63	R19	R19	S64	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-44	 	 	S65	 	S66	S67	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-45	 	 	R25	R25	R25	R25	R25	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-46	 	 	R26	R26	R26	R26	R26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-47	 	S23	 	 	 	 	 	 	 	 	 	 	G68	 	 	 	 	S27	 	 	S28	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-48	 	S23	 	 	 	 	 	 	 	 	 	 	G69	 	 	 	 	S27	 	 	S28	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-49	 	S23	 	 	 	 	 	 	 	 	 	 	G24	G70	 	 	 	S27	 	 	S28	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-50	 	S23	 	 	 	 	 	 	 	 	 	 	G24	G71	 	 	 	S27	 	 	S28	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-51	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R9	 	 	 	 	 	 	 	 	 	 	 	R9	 	 	 	 	R9	R9	R9	
sta-52	 	 	S72	 	S66	S67	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-53	 	S29	 	 	 	 	 	 	 	G73	 	 	G33	G34	G35	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-54	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S74	 	 	 	
sta-55	 	S29	 	 	 	 	 	 	 	G30	G75	 	G33	G34	G35	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-56	 	S29	 	 	 	 	 	 	 	 	 	 	G76	 	 	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-57	 	S29	 	 	 	 	 	 	 	 	 	 	G77	 	 	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-58	 	S29	 	 	 	 	 	 	 	 	 	 	G33	G78	 	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-59	 	S29	 	 	 	 	 	 	 	 	 	 	G33	G79	 	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-60	 	S80	 	 	 	 	 	 	 	 	 	 	G81	G82	G83	 	 	S84	 	 	S85	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-61	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S86	 	 	 	 	 	 	 	 	 	
sta-62	 	 	S87	 	S66	S67	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-63	 	S41	 	 	 	 	 	 	 	 	 	 	G88	 	 	 	 	S45	 	 	S46	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-64	 	S41	 	 	 	 	 	 	 	 	 	 	G89	 	 	 	 	S45	 	 	S46	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-65	 	 	 	R27	R27	R27	R27	R27	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-66	 	S41	 	 	 	 	 	 	 	 	 	 	G42	G90	 	 	 	S45	 	 	S46	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-67	 	S41	 	 	 	 	 	 	 	 	 	 	G42	G91	 	 	 	S45	 	 	S46	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-68	 	 	 	R23	R23	R23	R23	R23	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-69	 	 	 	R24	R24	R24	R24	R24	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-70	 	 	 	S47	R20	R20	S48	R20	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-71	 	 	 	S47	R21	R21	S48	R21	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-72	 	 	R27	R27	R27	R27	R27	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R27	 	 	 	 	R27	R27	 	 	 	 	
sta-73	 	 	R16	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R16	 	 	 	 	R16	 	 	 	 	 	
sta-74	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S92	 	G93	 	 	 	G94	G95	 	 	 	 	S96	 	 	 	 	S97	S98	 	
sta-75	 	 	R14	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S53	 	 	 	 	R14	 	 	 	 	 	
sta-76	 	 	R23	R23	R23	R23	R23	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R23	 	 	 	 	R23	R23	 	 	 	 	
sta-77	 	 	R24	R24	R24	R24	R24	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R24	 	 	 	 	R24	R24	 	 	 	 	
sta-78	 	 	R20	S56	R20	R20	S57	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R20	 	 	 	 	R20	R20	 	 	 	 	
sta-79	 	 	R21	S56	R21	R21	S57	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R21	 	 	 	 	R21	R21	 	 	 	 	
sta-80	 	S41	 	 	 	 	 	 	 	 	 	 	G42	G43	G99	 	 	S45	 	 	S46	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-81	 	 	R22	R22	R22	R22	R22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R22	 	 	 	 	R22	 	 	 	 	 	
sta-82	 	 	R19	S100	R19	R19	S101	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R19	 	 	 	 	R19	 	 	 	 	 	
sta-83	 	 	R17	 	S102	S103	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R17	 	 	 	 	R17	 	 	 	 	 	
sta-84	 	 	R25	R25	R25	R25	R25	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R25	 	 	 	 	R25	 	 	 	 	 	
sta-85	 	 	R26	R26	R26	R26	R26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R26	 	 	 	 	R26	 	 	 	 	 	
sta-86	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S6	 	G7	 	 	 	G8	G104	 	 	 	 	S10	 	 	 	 	S12	S13	 	
sta-87	 	 	R27	R27	R27	R27	R27	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-88	 	 	R23	R23	R23	R23	R23	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-89	 	 	R24	R24	R24	R24	R24	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-90	 	 	R20	S63	R20	R20	S64	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-91	 	 	R21	S63	R21	R21	S64	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-92	 	 	 	 	 	 	 	 	S105	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-93	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R5	 	 	 	 	 	 	 	 	 	 	R5	R5	 	 	 	 	R5	R5	R5	
sta-94	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R4	 	 	 	 	 	 	 	 	 	 	R4	R4	 	 	 	 	R4	R4	R4	
sta-95	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R7	 	 	 	 	 	 	 	 	 	 	S106	R7	 	 	 	 	R7	R7	R7	
sta-96	 	S107	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-97	 	S108	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-98	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G109	 	S6	 	G7	 	 	 	G8	G9	 	 	 	 	S10	 	 	 	 	S12	S13	 	
sta-99	 	 	S110	 	S66	S67	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-100	 	S80	 	 	 	 	 	 	 	 	 	 	G111	 	 	 	 	S84	 	 	S85	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-101	 	S80	 	 	 	 	 	 	 	 	 	 	G112	 	 	 	 	S84	 	 	S85	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-102	 	S80	 	 	 	 	 	 	 	 	 	 	G81	G113	 	 	 	S84	 	 	S85	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-103	 	S80	 	 	 	 	 	 	 	 	 	 	G81	G114	 	 	 	S84	 	 	S85	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-104	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R8	 	 	 	 	 	 	 	 	 	 	 	R8	 	 	 	 	R8	R8	R8	
sta-105	 	S23	 	 	 	 	 	 	 	 	 	 	G24	G25	G115	 	 	S27	 	 	S28	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-106	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S6	 	G7	 	 	 	G8	G116	 	 	 	 	S10	 	 	 	 	S12	S13	 	
sta-107	 	S29	 	 	 	 	 	 	 	G30	G31	G117	G33	G34	G35	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-108	 	S29	 	 	 	 	 	 	 	G30	G31	G118	G33	G34	G35	 	 	S36	 	 	S37	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-109	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S119	
sta-110	 	 	R27	R27	R27	R27	R27	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R27	 	 	 	 	R27	 	 	 	 	 	
sta-111	 	 	R23	R23	R23	R23	R23	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R23	 	 	 	 	R23	 	 	 	 	 	
sta-112	 	 	R24	R24	R24	R24	R24	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R24	 	 	 	 	R24	 	 	 	 	 	
sta-113	 	 	R20	S100	R20	R20	S101	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R20	 	 	 	 	R20	 	 	 	 	 	
sta-114	 	 	R21	S100	R21	R21	S101	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R21	 	 	 	 	R21	 	 	 	 	 	
sta-115	 	 	 	 	S49	S50	 	S120	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-116	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R6	 	 	 	 	 	 	 	 	 	 	 	R6	 	 	 	 	R6	R6	R6	
sta-117	 	 	S121	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S55	 	 	 	 	 	
sta-118	 	 	S122	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S55	 	 	 	 	 	
sta-119	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R10	 	 	 	 	 	 	 	 	 	 	R10	R10	 	 	 	 	R10	R10	R10	
sta-120	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R9	 	 	 	 	 	 	 	 	 	 	R9	R9	 	 	 	 	R9	R9	R9	
sta-121	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S123	 	 	 	
sta-122	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S124	 	 	 	 	 	 	 	 	 	
sta-123	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S92	 	G93	 	 	 	G94	G125	 	 	 	 	S96	 	 	 	 	S97	S98	 	
sta-124	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S92	 	G93	 	 	 	G94	G126	 	 	 	 	S96	 	 	 	 	S97	S98	 	
sta-125	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R7	 	 	 	 	 	 	 	 	 	 	S127	R7	 	 	 	 	R7	R7	R7	
sta-126	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R8	 	 	 	 	 	 	 	 	 	 	R8	R8	 	 	 	 	R8	R8	R8	
sta-127	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S92	 	G93	 	 	 	G94	G128	 	 	 	 	S96	 	 	 	 	S97	S98	 	
sta-128	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R6	 	 	 	 	 	 	 	 	 	 	R6	R6	 	 	 	 	R6	R6	R6	
a
b
a
10
a
>
0
b
a
b
a
1
a
<=
10
a
>
5
a
b
1

 LEX Input 57
 Step { 
 Step int 
 Step ID a
 Step ; 
 Recur [3] To D statePush 3
 Step int 
 Step ID b
 Step ; 
 Recur [4] To D statePush 3
 Step ID a
 Step = 
 Step NUM 10
 Recur [1] To CEF statePush 24
 Recur [1] To CET statePush 25
 Recur [1] To CEp statePush 26
 Step ; 
 Recur [4] To NST statePush 7
 Recur [1] To S statePush 9
 Step if 
 Step ( 
 Step ID a
 Recur [1] To CEF statePush 33
 Recur [1] To CET statePush 34
 Recur [1] To CEp statePush 35
 Step relop >
 Step NUM 0
 Recur [1] To CEF statePush 81
 Recur [1] To CET statePush 82
 Recur [1] To CEp statePush 83
 Recur [3] To BEF statePush 30
 Recur [1] To BET statePush 31
 Recur [1] To BEp statePush 32
 Step ) 
 Step then 
 Step { 
 Step ID b
 Step = 
 Step ID a
 Recur [1] To CEF statePush 24
 Recur [1] To CET statePush 25
 Recur [1] To CEp statePush 26
 Step ; 
 Recur [4] To NST statePush 7
 Recur [1] To S statePush 9
 Recur [1] To CS statePush 109
 Step } 
 Recur [3] To NST statePush 93
 Recur [1] To S statePush 95
 Step else 
 Step { 
 Step ID b
 Step = 
 Step ( 
 Step ID a
 Recur [1] To CEF statePush 42
 Recur [1] To CET statePush 43
 Recur [1] To CEp statePush 44
 Step - 
 Step NUM 1
 Recur [1] To CEF statePush 42
 Recur [1] To CET statePush 91
 Recur [3] To CEp statePush 44
 Step ) 
 Recur [3] To CEF statePush 24
 Recur [1] To CET statePush 25
 Recur [1] To CEp statePush 26
 Step ; 
 Recur [4] To NST statePush 7
 Recur [1] To S statePush 9
 Recur [1] To CS statePush 21
 Step } 
 Recur [3] To NST statePush 7
 Recur [1] To S statePush 116
 Recur [8] To ST statePush 8
 Recur [1] To S statePush 9
 Step while 
 Step ( 
 Step ID a
 Recur [1] To CEF statePush 33
 Recur [1] To CET statePush 34
 Recur [1] To CEp statePush 35
 Step relop <=
 Step NUM 10
 Recur [1] To CEF statePush 81
 Recur [1] To CET statePush 82
 Recur [1] To CEp statePush 83
 Recur [3] To BEF statePush 30
 Recur [1] To BET statePush 31
 Step and 
 Step ID a
 Recur [1] To CEF statePush 33
 Recur [1] To CET statePush 34
 Recur [1] To CEp statePush 35
 Step relop >
 Step NUM 5
 Recur [1] To CEF statePush 81
 Recur [1] To CET statePush 82
 Recur [1] To CEp statePush 83
 Recur [3] To BEF statePush 73
 Recur [3] To BET statePush 31
 Recur [1] To BEp statePush 39
 Step ) 
 Step do 
 Step { 
 Step ID a
 Step = 
 Step ( 
 Step ID b
 Recur [1] To CEF statePush 42
 Recur [1] To CET statePush 43
 Recur [1] To CEp statePush 44
 Step + 
 Step NUM 1
 Recur [1] To CEF statePush 42
 Recur [1] To CET statePush 90
 Recur [3] To CEp statePush 44
 Step ) 
 Recur [3] To CEF statePush 24
 Recur [1] To CET statePush 25
 Recur [1] To CEp statePush 26
 Step ; 
 Recur [4] To NST statePush 7
 Recur [1] To S statePush 9
 Recur [1] To CS statePush 21
 Step } 
 Recur [3] To NST statePush 7
 Recur [1] To S statePush 104
 Recur [6] To NST statePush 7
 Recur [1] To S statePush 9
 Recur [1] To CS statePush 17
 Recur [2] To CS statePush 17
 Recur [2] To CS statePush 5
 Step } 
