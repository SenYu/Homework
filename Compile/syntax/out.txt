Production
 Rule[0]: _P0 => P0   
 Rule[1]: P0 => {1   D0   CS0   }1   
 Rule[2]: D0 => D0   int1   ID1   ;1   
 Rule[3]: D0 => int1   ID1   ;1   
 Rule[4]: S0 => if1   (1   BEp0   )1   then1   S0   else1   S0   
 Rule[5]: S0 => if1   (1   BEp0   )1   then1   S0   
 Rule[6]: S0 => while1   (1   BEp0   )1   do1   S0   
 Rule[7]: S0 => ID1   =1   CEp0   ;1   
 Rule[8]: S0 => {1   CS0   }1   
 Rule[9]: CS0 => S0   CS0   
 Rule[10]: CS0 => S0   
 Rule[11]: BEp0 => BET0   
 Rule[12]: BEp0 => BEp0   or1   BET0   
 Rule[13]: BET0 => BEF0   
 Rule[14]: BET0 => BET0   and1   BEF0   
 Rule[15]: BEF0 => CEp0   relop1   CEp0   
 Rule[16]: BEF0 => CEp0   
 Rule[17]: CEp0 => CET0   
 Rule[18]: CEp0 => CEp0   +1   CET0   
 Rule[19]: CEp0 => CEp0   -1   CET0   
 Rule[20]: CET0 => CEF0   
 Rule[21]: CET0 => CET0   *1   CEF0   
 Rule[22]: CET0 => CET0   /1   CEF0   
 Rule[23]: CEF0 => ID1   
 Rule[24]: CEF0 => NUM1   
 Rule[25]: CEF0 => (1   CEp0   )1   
[0] _P => [#]   P0   
[1] _P => P0   [#]   
[2] P => [#]   {1   D0   CS0   }1   
[3] P => {1   [#]   D0   CS0   }1   
[4] P => {1   D0   [#]   CS0   }1   
[5] P => {1   D0   CS0   [#]   }1   
[6] P => {1   D0   CS0   }1   [#]   
[7] D => [#]   D0   int1   ID1   ;1   
[8] D => D0   [#]   int1   ID1   ;1   
[9] D => D0   int1   [#]   ID1   ;1   
[10] D => D0   int1   ID1   [#]   ;1   
[11] D => D0   int1   ID1   ;1   [#]   
[12] D => [#]   int1   ID1   ;1   
[13] D => int1   [#]   ID1   ;1   
[14] D => int1   ID1   [#]   ;1   
[15] D => int1   ID1   ;1   [#]   
[16] S => [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
[17] S => if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
[18] S => if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
[19] S => if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
[20] S => if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
[21] S => if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
[22] S => if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
[23] S => if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
[24] S => if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
[25] S => [#]   if1   (1   BEp0   )1   then1   S0   
[26] S => if1   [#]   (1   BEp0   )1   then1   S0   
[27] S => if1   (1   [#]   BEp0   )1   then1   S0   
[28] S => if1   (1   BEp0   [#]   )1   then1   S0   
[29] S => if1   (1   BEp0   )1   [#]   then1   S0   
[30] S => if1   (1   BEp0   )1   then1   [#]   S0   
[31] S => if1   (1   BEp0   )1   then1   S0   [#]   
[32] S => [#]   while1   (1   BEp0   )1   do1   S0   
[33] S => while1   [#]   (1   BEp0   )1   do1   S0   
[34] S => while1   (1   [#]   BEp0   )1   do1   S0   
[35] S => while1   (1   BEp0   [#]   )1   do1   S0   
[36] S => while1   (1   BEp0   )1   [#]   do1   S0   
[37] S => while1   (1   BEp0   )1   do1   [#]   S0   
[38] S => while1   (1   BEp0   )1   do1   S0   [#]   
[39] S => [#]   ID1   =1   CEp0   ;1   
[40] S => ID1   [#]   =1   CEp0   ;1   
[41] S => ID1   =1   [#]   CEp0   ;1   
[42] S => ID1   =1   CEp0   [#]   ;1   
[43] S => ID1   =1   CEp0   ;1   [#]   
[44] S => [#]   {1   CS0   }1   
[45] S => {1   [#]   CS0   }1   
[46] S => {1   CS0   [#]   }1   
[47] S => {1   CS0   }1   [#]   
[48] BEp => [#]   BET0   
[49] BEp => BET0   [#]   
[50] BEp => [#]   BEp0   or1   BET0   
[51] BEp => BEp0   [#]   or1   BET0   
[52] BEp => BEp0   or1   [#]   BET0   
[53] BEp => BEp0   or1   BET0   [#]   
[54] BET => [#]   BEF0   
[55] BET => BEF0   [#]   
[56] BET => [#]   BET0   and1   BEF0   
[57] BET => BET0   [#]   and1   BEF0   
[58] BET => BET0   and1   [#]   BEF0   
[59] BET => BET0   and1   BEF0   [#]   
[60] BEF => [#]   CEp0   relop1   CEp0   
[61] BEF => CEp0   [#]   relop1   CEp0   
[62] BEF => CEp0   relop1   [#]   CEp0   
[63] BEF => CEp0   relop1   CEp0   [#]   
[64] BEF => [#]   CEp0   
[65] BEF => CEp0   [#]   
[66] CEp => [#]   CET0   
[67] CEp => CET0   [#]   
[68] CEp => [#]   CEp0   +1   CET0   
[69] CEp => CEp0   [#]   +1   CET0   
[70] CEp => CEp0   +1   [#]   CET0   
[71] CEp => CEp0   +1   CET0   [#]   
[72] CEp => [#]   CEp0   -1   CET0   
[73] CEp => CEp0   [#]   -1   CET0   
[74] CEp => CEp0   -1   [#]   CET0   
[75] CEp => CEp0   -1   CET0   [#]   
[76] CET => [#]   CEF0   
[77] CET => CEF0   [#]   
[78] CET => [#]   CET0   *1   CEF0   
[79] CET => CET0   [#]   *1   CEF0   
[80] CET => CET0   *1   [#]   CEF0   
[81] CET => CET0   *1   CEF0   [#]   
[82] CET => [#]   CET0   /1   CEF0   
[83] CET => CET0   [#]   /1   CEF0   
[84] CET => CET0   /1   [#]   CEF0   
[85] CET => CET0   /1   CEF0   [#]   
[86] CEF => [#]   ID1   
[87] CEF => ID1   [#]   
[88] CEF => [#]   NUM1   
[89] CEF => NUM1   [#]   
[90] CEF => [#]   (1   CEp0   )1   
[91] CEF => (1   [#]   CEp0   )1   
[92] CEF => (1   CEp0   [#]   )1   
[93] CEF => (1   CEp0   )1   [#]   
[94] CS => [#]   S0   CS0   
[95] CS => S0   [#]   CS0   
[96] CS => S0   CS0   [#]   
[97] CS => [#]   S0   
[98] CS => S0   [#]   
IState ID 0 :
 _P  char[ # ]
  [#]   P0   
 P  char[ # ]
  [#]   {1   D0   CS0   }1   

IState ID 1 :
 _P  char[ # ]
  P0   [#]   

IState ID 2 :
 D  char[ int ]
  [#]   int1   ID1   ;1   
 D  char[ if ]
  [#]   int1   ID1   ;1   
 D  char[ while ]
  [#]   int1   ID1   ;1   
 D  char[ ID ]
  [#]   int1   ID1   ;1   
 D  char[ { ]
  [#]   int1   ID1   ;1   
 P  char[ # ]
  {1   [#]   D0   CS0   }1   
 D  char[ int ]
  [#]   D0   int1   ID1   ;1   
 D  char[ if ]
  [#]   D0   int1   ID1   ;1   
 D  char[ while ]
  [#]   D0   int1   ID1   ;1   
 D  char[ ID ]
  [#]   D0   int1   ID1   ;1   
 D  char[ { ]
  [#]   D0   int1   ID1   ;1   

IState ID 3 :
 D  char[ int ]
  D0   [#]   int1   ID1   ;1   
 D  char[ if ]
  D0   [#]   int1   ID1   ;1   
 D  char[ while ]
  D0   [#]   int1   ID1   ;1   
 D  char[ ID ]
  D0   [#]   int1   ID1   ;1   
 D  char[ { ]
  D0   [#]   int1   ID1   ;1   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   
 CS  char[ } ]
  [#]   S0   CS0   
 CS  char[ } ]
  [#]   S0   
 P  char[ # ]
  {1   D0   [#]   CS0   }1   

IState ID 4 :
 D  char[ int ]
  int1   [#]   ID1   ;1   
 D  char[ if ]
  int1   [#]   ID1   ;1   
 D  char[ while ]
  int1   [#]   ID1   ;1   
 D  char[ ID ]
  int1   [#]   ID1   ;1   
 D  char[ { ]
  int1   [#]   ID1   ;1   

IState ID 5 :
 P  char[ # ]
  {1   D0   CS0   [#]   }1   

IState ID 6 :
 S  char[ if ]
  ID1   [#]   =1   CEp0   ;1   
 S  char[ while ]
  ID1   [#]   =1   CEp0   ;1   
 S  char[ ID ]
  ID1   [#]   =1   CEp0   ;1   
 S  char[ { ]
  ID1   [#]   =1   CEp0   ;1   
 S  char[ } ]
  ID1   [#]   =1   CEp0   ;1   

IState ID 7 :
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   
 CS  char[ } ]
  [#]   S0   CS0   
 CS  char[ } ]
  S0   [#]   CS0   
 CS  char[ } ]
  [#]   S0   
 CS  char[ } ]
  S0   [#]   

IState ID 8 :
 S  char[ if ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  if1   [#]   (1   BEp0   )1   then1   S0   

IState ID 9 :
 D  char[ int ]
  D0   int1   [#]   ID1   ;1   
 D  char[ if ]
  D0   int1   [#]   ID1   ;1   
 D  char[ while ]
  D0   int1   [#]   ID1   ;1   
 D  char[ ID ]
  D0   int1   [#]   ID1   ;1   
 D  char[ { ]
  D0   int1   [#]   ID1   ;1   

IState ID 10 :
 S  char[ if ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  while1   [#]   (1   BEp0   )1   do1   S0   

IState ID 11 :
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   
 S  char[ if ]
  {1   [#]   CS0   }1   
 S  char[ while ]
  {1   [#]   CS0   }1   
 S  char[ ID ]
  {1   [#]   CS0   }1   
 S  char[ { ]
  {1   [#]   CS0   }1   
 S  char[ } ]
  {1   [#]   CS0   }1   
 CS  char[ } ]
  [#]   S0   CS0   
 CS  char[ } ]
  [#]   S0   

IState ID 12 :
 D  char[ int ]
  int1   ID1   [#]   ;1   
 D  char[ if ]
  int1   ID1   [#]   ;1   
 D  char[ while ]
  int1   ID1   [#]   ;1   
 D  char[ ID ]
  int1   ID1   [#]   ;1   
 D  char[ { ]
  int1   ID1   [#]   ;1   

IState ID 13 :
 P  char[ # ]
  {1   D0   CS0   }1   [#]   

IState ID 14 :
 S  char[ if ]
  ID1   =1   [#]   CEp0   ;1   
 S  char[ while ]
  ID1   =1   [#]   CEp0   ;1   
 S  char[ ID ]
  ID1   =1   [#]   CEp0   ;1   
 S  char[ { ]
  ID1   =1   [#]   CEp0   ;1   
 S  char[ } ]
  ID1   =1   [#]   CEp0   ;1   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ; ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ; ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ; ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ; ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ; ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ; ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 15 :
 CS  char[ } ]
  S0   CS0   [#]   

IState ID 16 :
 S  char[ if ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 S  char[ while ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 S  char[ ID ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 S  char[ { ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 S  char[ } ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 BEp  char[ or ]
  [#]   BET0   
 BEp  char[ ) ]
  [#]   BET0   
 BEp  char[ or ]
  [#]   BEp0   or1   BET0   
 BEp  char[ ) ]
  [#]   BEp0   or1   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 17 :
 D  char[ int ]
  D0   int1   ID1   [#]   ;1   
 D  char[ if ]
  D0   int1   ID1   [#]   ;1   
 D  char[ while ]
  D0   int1   ID1   [#]   ;1   
 D  char[ ID ]
  D0   int1   ID1   [#]   ;1   
 D  char[ { ]
  D0   int1   ID1   [#]   ;1   

IState ID 18 :
 S  char[ if ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 S  char[ while ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 S  char[ ID ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 S  char[ { ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 S  char[ } ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 BEp  char[ or ]
  [#]   BET0   
 BEp  char[ ) ]
  [#]   BET0   
 BEp  char[ or ]
  [#]   BEp0   or1   BET0   
 BEp  char[ ) ]
  [#]   BEp0   or1   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 19 :
 S  char[ if ]
  {1   CS0   [#]   }1   
 S  char[ while ]
  {1   CS0   [#]   }1   
 S  char[ ID ]
  {1   CS0   [#]   }1   
 S  char[ { ]
  {1   CS0   [#]   }1   
 S  char[ } ]
  {1   CS0   [#]   }1   

IState ID 20 :
 D  char[ int ]
  int1   ID1   ;1   [#]   
 D  char[ if ]
  int1   ID1   ;1   [#]   
 D  char[ while ]
  int1   ID1   ;1   [#]   
 D  char[ ID ]
  int1   ID1   ;1   [#]   
 D  char[ { ]
  int1   ID1   ;1   [#]   

IState ID 21 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  (1   [#]   CEp0   )1   
 CEF  char[ - ]
  (1   [#]   CEp0   )1   
 CEF  char[ * ]
  (1   [#]   CEp0   )1   
 CEF  char[ / ]
  (1   [#]   CEp0   )1   
 CEF  char[ ; ]
  (1   [#]   CEp0   )1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 22 :
 CET  char[ + ]
  CEF0   [#]   
 CET  char[ - ]
  CEF0   [#]   
 CET  char[ * ]
  CEF0   [#]   
 CET  char[ / ]
  CEF0   [#]   
 CET  char[ ; ]
  CEF0   [#]   

IState ID 23 :
 CEp  char[ + ]
  CET0   [#]   
 CEp  char[ - ]
  CET0   [#]   
 CEp  char[ ; ]
  CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ; ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ; ]
  CET0   [#]   /1   CEF0   

IState ID 24 :
 S  char[ if ]
  ID1   =1   CEp0   [#]   ;1   
 S  char[ while ]
  ID1   =1   CEp0   [#]   ;1   
 S  char[ ID ]
  ID1   =1   CEp0   [#]   ;1   
 S  char[ { ]
  ID1   =1   CEp0   [#]   ;1   
 S  char[ } ]
  ID1   =1   CEp0   [#]   ;1   
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ; ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ; ]
  CEp0   [#]   -1   CET0   

IState ID 25 :
 CEF  char[ + ]
  ID1   [#]   
 CEF  char[ - ]
  ID1   [#]   
 CEF  char[ * ]
  ID1   [#]   
 CEF  char[ / ]
  ID1   [#]   
 CEF  char[ ; ]
  ID1   [#]   

IState ID 26 :
 CEF  char[ + ]
  NUM1   [#]   
 CEF  char[ - ]
  NUM1   [#]   
 CEF  char[ * ]
  NUM1   [#]   
 CEF  char[ / ]
  NUM1   [#]   
 CEF  char[ ; ]
  NUM1   [#]   

IState ID 27 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  (1   [#]   CEp0   )1   
 CEF  char[ - ]
  (1   [#]   CEp0   )1   
 CEF  char[ * ]
  (1   [#]   CEp0   )1   
 CEF  char[ / ]
  (1   [#]   CEp0   )1   
 CEF  char[ and ]
  (1   [#]   CEp0   )1   
 CEF  char[ or ]
  (1   [#]   CEp0   )1   
 CEF  char[ ) ]
  (1   [#]   CEp0   )1   
 CEF  char[ relop ]
  (1   [#]   CEp0   )1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 28 :
 BET  char[ and ]
  BEF0   [#]   
 BET  char[ or ]
  BEF0   [#]   
 BET  char[ ) ]
  BEF0   [#]   

IState ID 29 :
 BEp  char[ or ]
  BET0   [#]   
 BEp  char[ ) ]
  BET0   [#]   
 BET  char[ and ]
  BET0   [#]   and1   BEF0   
 BET  char[ or ]
  BET0   [#]   and1   BEF0   
 BET  char[ ) ]
  BET0   [#]   and1   BEF0   

IState ID 30 :
 S  char[ if ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ while ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ ID ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ { ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ } ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 S  char[ while ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 S  char[ ID ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 S  char[ { ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 S  char[ } ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 BEp  char[ or ]
  BEp0   [#]   or1   BET0   
 BEp  char[ ) ]
  BEp0   [#]   or1   BET0   

IState ID 31 :
 CET  char[ + ]
  CEF0   [#]   
 CET  char[ - ]
  CEF0   [#]   
 CET  char[ * ]
  CEF0   [#]   
 CET  char[ / ]
  CEF0   [#]   
 CET  char[ and ]
  CEF0   [#]   
 CET  char[ or ]
  CEF0   [#]   
 CET  char[ ) ]
  CEF0   [#]   
 CET  char[ relop ]
  CEF0   [#]   

IState ID 32 :
 CEp  char[ + ]
  CET0   [#]   
 CEp  char[ - ]
  CET0   [#]   
 CEp  char[ and ]
  CET0   [#]   
 CEp  char[ or ]
  CET0   [#]   
 CEp  char[ ) ]
  CET0   [#]   
 CEp  char[ relop ]
  CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ relop ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   
 CET  char[ relop ]
  CET0   [#]   /1   CEF0   

IState ID 33 :
 BEF  char[ and ]
  CEp0   [#]   relop1   CEp0   
 BEF  char[ or ]
  CEp0   [#]   relop1   CEp0   
 BEF  char[ ) ]
  CEp0   [#]   relop1   CEp0   
 BEF  char[ and ]
  CEp0   [#]   
 BEF  char[ or ]
  CEp0   [#]   
 BEF  char[ ) ]
  CEp0   [#]   
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ and ]
  CEp0   [#]   +1   CET0   
 CEp  char[ or ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ relop ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ and ]
  CEp0   [#]   -1   CET0   
 CEp  char[ or ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEp  char[ relop ]
  CEp0   [#]   -1   CET0   

IState ID 34 :
 CEF  char[ + ]
  ID1   [#]   
 CEF  char[ - ]
  ID1   [#]   
 CEF  char[ * ]
  ID1   [#]   
 CEF  char[ / ]
  ID1   [#]   
 CEF  char[ and ]
  ID1   [#]   
 CEF  char[ or ]
  ID1   [#]   
 CEF  char[ ) ]
  ID1   [#]   
 CEF  char[ relop ]
  ID1   [#]   

IState ID 35 :
 CEF  char[ + ]
  NUM1   [#]   
 CEF  char[ - ]
  NUM1   [#]   
 CEF  char[ * ]
  NUM1   [#]   
 CEF  char[ / ]
  NUM1   [#]   
 CEF  char[ and ]
  NUM1   [#]   
 CEF  char[ or ]
  NUM1   [#]   
 CEF  char[ ) ]
  NUM1   [#]   
 CEF  char[ relop ]
  NUM1   [#]   

IState ID 36 :
 D  char[ int ]
  D0   int1   ID1   ;1   [#]   
 D  char[ if ]
  D0   int1   ID1   ;1   [#]   
 D  char[ while ]
  D0   int1   ID1   ;1   [#]   
 D  char[ ID ]
  D0   int1   ID1   ;1   [#]   
 D  char[ { ]
  D0   int1   ID1   ;1   [#]   

IState ID 37 :
 S  char[ if ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 S  char[ while ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 S  char[ ID ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 S  char[ { ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 S  char[ } ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 BEp  char[ or ]
  BEp0   [#]   or1   BET0   
 BEp  char[ ) ]
  BEp0   [#]   or1   BET0   

IState ID 38 :
 S  char[ if ]
  {1   CS0   }1   [#]   
 S  char[ while ]
  {1   CS0   }1   [#]   
 S  char[ ID ]
  {1   CS0   }1   [#]   
 S  char[ { ]
  {1   CS0   }1   [#]   
 S  char[ } ]
  {1   CS0   }1   [#]   

IState ID 39 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  (1   [#]   CEp0   )1   
 CEF  char[ - ]
  (1   [#]   CEp0   )1   
 CEF  char[ * ]
  (1   [#]   CEp0   )1   
 CEF  char[ / ]
  (1   [#]   CEp0   )1   
 CEF  char[ ) ]
  (1   [#]   CEp0   )1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 40 :
 CET  char[ + ]
  CEF0   [#]   
 CET  char[ - ]
  CEF0   [#]   
 CET  char[ * ]
  CEF0   [#]   
 CET  char[ / ]
  CEF0   [#]   
 CET  char[ ) ]
  CEF0   [#]   

IState ID 41 :
 CEp  char[ + ]
  CET0   [#]   
 CEp  char[ - ]
  CET0   [#]   
 CEp  char[ ) ]
  CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 42 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEF  char[ + ]
  (1   CEp0   [#]   )1   
 CEF  char[ - ]
  (1   CEp0   [#]   )1   
 CEF  char[ * ]
  (1   CEp0   [#]   )1   
 CEF  char[ / ]
  (1   CEp0   [#]   )1   
 CEF  char[ ; ]
  (1   CEp0   [#]   )1   

IState ID 43 :
 CEF  char[ + ]
  ID1   [#]   
 CEF  char[ - ]
  ID1   [#]   
 CEF  char[ * ]
  ID1   [#]   
 CEF  char[ / ]
  ID1   [#]   
 CEF  char[ ) ]
  ID1   [#]   

IState ID 44 :
 CEF  char[ + ]
  NUM1   [#]   
 CEF  char[ - ]
  NUM1   [#]   
 CEF  char[ * ]
  NUM1   [#]   
 CEF  char[ / ]
  NUM1   [#]   
 CEF  char[ ) ]
  NUM1   [#]   

IState ID 45 :
 CET  char[ + ]
  CET0   *1   [#]   CEF0   
 CET  char[ - ]
  CET0   *1   [#]   CEF0   
 CET  char[ * ]
  CET0   *1   [#]   CEF0   
 CET  char[ / ]
  CET0   *1   [#]   CEF0   
 CET  char[ ; ]
  CET0   *1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 46 :
 CET  char[ + ]
  CET0   /1   [#]   CEF0   
 CET  char[ - ]
  CET0   /1   [#]   CEF0   
 CET  char[ * ]
  CET0   /1   [#]   CEF0   
 CET  char[ / ]
  CET0   /1   [#]   CEF0   
 CET  char[ ; ]
  CET0   /1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 47 :
 CEp  char[ + ]
  CEp0   +1   [#]   CET0   
 CEp  char[ - ]
  CEp0   +1   [#]   CET0   
 CEp  char[ ; ]
  CEp0   +1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ; ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ; ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ; ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 48 :
 CEp  char[ + ]
  CEp0   -1   [#]   CET0   
 CEp  char[ - ]
  CEp0   -1   [#]   CET0   
 CEp  char[ ; ]
  CEp0   -1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ; ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ; ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ; ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 49 :
 S  char[ if ]
  ID1   =1   CEp0   ;1   [#]   
 S  char[ while ]
  ID1   =1   CEp0   ;1   [#]   
 S  char[ ID ]
  ID1   =1   CEp0   ;1   [#]   
 S  char[ { ]
  ID1   =1   CEp0   ;1   [#]   
 S  char[ } ]
  ID1   =1   CEp0   ;1   [#]   

IState ID 50 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEF  char[ + ]
  (1   CEp0   [#]   )1   
 CEF  char[ - ]
  (1   CEp0   [#]   )1   
 CEF  char[ * ]
  (1   CEp0   [#]   )1   
 CEF  char[ / ]
  (1   CEp0   [#]   )1   
 CEF  char[ and ]
  (1   CEp0   [#]   )1   
 CEF  char[ or ]
  (1   CEp0   [#]   )1   
 CEF  char[ ) ]
  (1   CEp0   [#]   )1   
 CEF  char[ relop ]
  (1   CEp0   [#]   )1   

IState ID 51 :
 BET  char[ and ]
  BET0   and1   [#]   BEF0   
 BET  char[ or ]
  BET0   and1   [#]   BEF0   
 BET  char[ ) ]
  BET0   and1   [#]   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 52 :
 S  char[ if ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   [#]   then1   S0   

IState ID 53 :
 BEp  char[ or ]
  BEp0   or1   [#]   BET0   
 BEp  char[ ) ]
  BEp0   or1   [#]   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 54 :
 CET  char[ + ]
  CET0   *1   [#]   CEF0   
 CET  char[ - ]
  CET0   *1   [#]   CEF0   
 CET  char[ * ]
  CET0   *1   [#]   CEF0   
 CET  char[ / ]
  CET0   *1   [#]   CEF0   
 CET  char[ and ]
  CET0   *1   [#]   CEF0   
 CET  char[ or ]
  CET0   *1   [#]   CEF0   
 CET  char[ ) ]
  CET0   *1   [#]   CEF0   
 CET  char[ relop ]
  CET0   *1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 55 :
 CET  char[ + ]
  CET0   /1   [#]   CEF0   
 CET  char[ - ]
  CET0   /1   [#]   CEF0   
 CET  char[ * ]
  CET0   /1   [#]   CEF0   
 CET  char[ / ]
  CET0   /1   [#]   CEF0   
 CET  char[ and ]
  CET0   /1   [#]   CEF0   
 CET  char[ or ]
  CET0   /1   [#]   CEF0   
 CET  char[ ) ]
  CET0   /1   [#]   CEF0   
 CET  char[ relop ]
  CET0   /1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 56 :
 CEp  char[ + ]
  CEp0   +1   [#]   CET0   
 CEp  char[ - ]
  CEp0   +1   [#]   CET0   
 CEp  char[ and ]
  CEp0   +1   [#]   CET0   
 CEp  char[ or ]
  CEp0   +1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   +1   [#]   CET0   
 CEp  char[ relop ]
  CEp0   +1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 57 :
 CEp  char[ + ]
  CEp0   -1   [#]   CET0   
 CEp  char[ - ]
  CEp0   -1   [#]   CET0   
 CEp  char[ and ]
  CEp0   -1   [#]   CET0   
 CEp  char[ or ]
  CEp0   -1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   -1   [#]   CET0   
 CEp  char[ relop ]
  CEp0   -1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 58 :
 BEF  char[ and ]
  CEp0   relop1   [#]   CEp0   
 BEF  char[ or ]
  CEp0   relop1   [#]   CEp0   
 BEF  char[ ) ]
  CEp0   relop1   [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 59 :
 S  char[ if ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 S  char[ while ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 S  char[ ID ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 S  char[ { ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 S  char[ } ]
  while1   (1   BEp0   )1   [#]   do1   S0   

IState ID 60 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEF  char[ + ]
  (1   CEp0   [#]   )1   
 CEF  char[ - ]
  (1   CEp0   [#]   )1   
 CEF  char[ * ]
  (1   CEp0   [#]   )1   
 CEF  char[ / ]
  (1   CEp0   [#]   )1   
 CEF  char[ ) ]
  (1   CEp0   [#]   )1   

IState ID 61 :
 CET  char[ + ]
  CET0   *1   [#]   CEF0   
 CET  char[ - ]
  CET0   *1   [#]   CEF0   
 CET  char[ * ]
  CET0   *1   [#]   CEF0   
 CET  char[ / ]
  CET0   *1   [#]   CEF0   
 CET  char[ ) ]
  CET0   *1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 62 :
 CET  char[ + ]
  CET0   /1   [#]   CEF0   
 CET  char[ - ]
  CET0   /1   [#]   CEF0   
 CET  char[ * ]
  CET0   /1   [#]   CEF0   
 CET  char[ / ]
  CET0   /1   [#]   CEF0   
 CET  char[ ) ]
  CET0   /1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 63 :
 CEF  char[ + ]
  (1   CEp0   )1   [#]   
 CEF  char[ - ]
  (1   CEp0   )1   [#]   
 CEF  char[ * ]
  (1   CEp0   )1   [#]   
 CEF  char[ / ]
  (1   CEp0   )1   [#]   
 CEF  char[ ; ]
  (1   CEp0   )1   [#]   

IState ID 64 :
 CEp  char[ + ]
  CEp0   +1   [#]   CET0   
 CEp  char[ - ]
  CEp0   +1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   +1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 65 :
 CEp  char[ + ]
  CEp0   -1   [#]   CET0   
 CEp  char[ - ]
  CEp0   -1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   -1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 66 :
 CET  char[ + ]
  CET0   *1   CEF0   [#]   
 CET  char[ - ]
  CET0   *1   CEF0   [#]   
 CET  char[ * ]
  CET0   *1   CEF0   [#]   
 CET  char[ / ]
  CET0   *1   CEF0   [#]   
 CET  char[ ; ]
  CET0   *1   CEF0   [#]   

IState ID 67 :
 CET  char[ + ]
  CET0   /1   CEF0   [#]   
 CET  char[ - ]
  CET0   /1   CEF0   [#]   
 CET  char[ * ]
  CET0   /1   CEF0   [#]   
 CET  char[ / ]
  CET0   /1   CEF0   [#]   
 CET  char[ ; ]
  CET0   /1   CEF0   [#]   

IState ID 68 :
 CEp  char[ + ]
  CEp0   +1   CET0   [#]   
 CEp  char[ - ]
  CEp0   +1   CET0   [#]   
 CEp  char[ ; ]
  CEp0   +1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ; ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ; ]
  CET0   [#]   /1   CEF0   

IState ID 69 :
 CEp  char[ + ]
  CEp0   -1   CET0   [#]   
 CEp  char[ - ]
  CEp0   -1   CET0   [#]   
 CEp  char[ ; ]
  CEp0   -1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ; ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ; ]
  CET0   [#]   /1   CEF0   

IState ID 70 :
 CEF  char[ + ]
  (1   CEp0   )1   [#]   
 CEF  char[ - ]
  (1   CEp0   )1   [#]   
 CEF  char[ * ]
  (1   CEp0   )1   [#]   
 CEF  char[ / ]
  (1   CEp0   )1   [#]   
 CEF  char[ and ]
  (1   CEp0   )1   [#]   
 CEF  char[ or ]
  (1   CEp0   )1   [#]   
 CEF  char[ ) ]
  (1   CEp0   )1   [#]   
 CEF  char[ relop ]
  (1   CEp0   )1   [#]   

IState ID 71 :
 BET  char[ and ]
  BET0   and1   BEF0   [#]   
 BET  char[ or ]
  BET0   and1   BEF0   [#]   
 BET  char[ ) ]
  BET0   and1   BEF0   [#]   

IState ID 72 :
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ else ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ else ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ else ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   

IState ID 73 :
 BEp  char[ or ]
  BEp0   or1   BET0   [#]   
 BEp  char[ ) ]
  BEp0   or1   BET0   [#]   
 BET  char[ and ]
  BET0   [#]   and1   BEF0   
 BET  char[ or ]
  BET0   [#]   and1   BEF0   
 BET  char[ ) ]
  BET0   [#]   and1   BEF0   

IState ID 74 :
 CET  char[ + ]
  CET0   *1   CEF0   [#]   
 CET  char[ - ]
  CET0   *1   CEF0   [#]   
 CET  char[ * ]
  CET0   *1   CEF0   [#]   
 CET  char[ / ]
  CET0   *1   CEF0   [#]   
 CET  char[ and ]
  CET0   *1   CEF0   [#]   
 CET  char[ or ]
  CET0   *1   CEF0   [#]   
 CET  char[ ) ]
  CET0   *1   CEF0   [#]   
 CET  char[ relop ]
  CET0   *1   CEF0   [#]   

IState ID 75 :
 CET  char[ + ]
  CET0   /1   CEF0   [#]   
 CET  char[ - ]
  CET0   /1   CEF0   [#]   
 CET  char[ * ]
  CET0   /1   CEF0   [#]   
 CET  char[ / ]
  CET0   /1   CEF0   [#]   
 CET  char[ and ]
  CET0   /1   CEF0   [#]   
 CET  char[ or ]
  CET0   /1   CEF0   [#]   
 CET  char[ ) ]
  CET0   /1   CEF0   [#]   
 CET  char[ relop ]
  CET0   /1   CEF0   [#]   

IState ID 76 :
 CEp  char[ + ]
  CEp0   +1   CET0   [#]   
 CEp  char[ - ]
  CEp0   +1   CET0   [#]   
 CEp  char[ and ]
  CEp0   +1   CET0   [#]   
 CEp  char[ or ]
  CEp0   +1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   +1   CET0   [#]   
 CEp  char[ relop ]
  CEp0   +1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ relop ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   
 CET  char[ relop ]
  CET0   [#]   /1   CEF0   

IState ID 77 :
 CEp  char[ + ]
  CEp0   -1   CET0   [#]   
 CEp  char[ - ]
  CEp0   -1   CET0   [#]   
 CEp  char[ and ]
  CEp0   -1   CET0   [#]   
 CEp  char[ or ]
  CEp0   -1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   -1   CET0   [#]   
 CEp  char[ relop ]
  CEp0   -1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ relop ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   
 CET  char[ relop ]
  CET0   [#]   /1   CEF0   

IState ID 78 :
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  (1   [#]   CEp0   )1   
 CEF  char[ - ]
  (1   [#]   CEp0   )1   
 CEF  char[ * ]
  (1   [#]   CEp0   )1   
 CEF  char[ / ]
  (1   [#]   CEp0   )1   
 CEF  char[ and ]
  (1   [#]   CEp0   )1   
 CEF  char[ or ]
  (1   [#]   CEp0   )1   
 CEF  char[ ) ]
  (1   [#]   CEp0   )1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 79 :
 CET  char[ + ]
  CEF0   [#]   
 CET  char[ - ]
  CEF0   [#]   
 CET  char[ * ]
  CEF0   [#]   
 CET  char[ / ]
  CEF0   [#]   
 CET  char[ and ]
  CEF0   [#]   
 CET  char[ or ]
  CEF0   [#]   
 CET  char[ ) ]
  CEF0   [#]   

IState ID 80 :
 CEp  char[ + ]
  CET0   [#]   
 CEp  char[ - ]
  CET0   [#]   
 CEp  char[ and ]
  CET0   [#]   
 CEp  char[ or ]
  CET0   [#]   
 CEp  char[ ) ]
  CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 81 :
 BEF  char[ and ]
  CEp0   relop1   CEp0   [#]   
 BEF  char[ or ]
  CEp0   relop1   CEp0   [#]   
 BEF  char[ ) ]
  CEp0   relop1   CEp0   [#]   
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ and ]
  CEp0   [#]   +1   CET0   
 CEp  char[ or ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ and ]
  CEp0   [#]   -1   CET0   
 CEp  char[ or ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   

IState ID 82 :
 CEF  char[ + ]
  ID1   [#]   
 CEF  char[ - ]
  ID1   [#]   
 CEF  char[ * ]
  ID1   [#]   
 CEF  char[ / ]
  ID1   [#]   
 CEF  char[ and ]
  ID1   [#]   
 CEF  char[ or ]
  ID1   [#]   
 CEF  char[ ) ]
  ID1   [#]   

IState ID 83 :
 CEF  char[ + ]
  NUM1   [#]   
 CEF  char[ - ]
  NUM1   [#]   
 CEF  char[ * ]
  NUM1   [#]   
 CEF  char[ / ]
  NUM1   [#]   
 CEF  char[ and ]
  NUM1   [#]   
 CEF  char[ or ]
  NUM1   [#]   
 CEF  char[ ) ]
  NUM1   [#]   

IState ID 84 :
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ while ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ ID ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ { ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ } ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   

IState ID 85 :
 CEF  char[ + ]
  (1   CEp0   )1   [#]   
 CEF  char[ - ]
  (1   CEp0   )1   [#]   
 CEF  char[ * ]
  (1   CEp0   )1   [#]   
 CEF  char[ / ]
  (1   CEp0   )1   [#]   
 CEF  char[ ) ]
  (1   CEp0   )1   [#]   

IState ID 86 :
 CET  char[ + ]
  CET0   *1   CEF0   [#]   
 CET  char[ - ]
  CET0   *1   CEF0   [#]   
 CET  char[ * ]
  CET0   *1   CEF0   [#]   
 CET  char[ / ]
  CET0   *1   CEF0   [#]   
 CET  char[ ) ]
  CET0   *1   CEF0   [#]   

IState ID 87 :
 CET  char[ + ]
  CET0   /1   CEF0   [#]   
 CET  char[ - ]
  CET0   /1   CEF0   [#]   
 CET  char[ * ]
  CET0   /1   CEF0   [#]   
 CET  char[ / ]
  CET0   /1   CEF0   [#]   
 CET  char[ ) ]
  CET0   /1   CEF0   [#]   

IState ID 88 :
 CEp  char[ + ]
  CEp0   +1   CET0   [#]   
 CEp  char[ - ]
  CEp0   +1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   +1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 89 :
 CEp  char[ + ]
  CEp0   -1   CET0   [#]   
 CEp  char[ - ]
  CEp0   -1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   -1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 90 :
 S  char[ if ]
  ID1   [#]   =1   CEp0   ;1   
 S  char[ else ]
  ID1   [#]   =1   CEp0   ;1   
 S  char[ while ]
  ID1   [#]   =1   CEp0   ;1   
 S  char[ ID ]
  ID1   [#]   =1   CEp0   ;1   
 S  char[ { ]
  ID1   [#]   =1   CEp0   ;1   
 S  char[ } ]
  ID1   [#]   =1   CEp0   ;1   

IState ID 91 :
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   

IState ID 92 :
 S  char[ if ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ else ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  if1   [#]   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 S  char[ else ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  if1   [#]   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  if1   [#]   (1   BEp0   )1   then1   S0   

IState ID 93 :
 S  char[ if ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 S  char[ else ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  while1   [#]   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  while1   [#]   (1   BEp0   )1   do1   S0   

IState ID 94 :
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   
 S  char[ if ]
  {1   [#]   CS0   }1   
 S  char[ else ]
  {1   [#]   CS0   }1   
 S  char[ while ]
  {1   [#]   CS0   }1   
 S  char[ ID ]
  {1   [#]   CS0   }1   
 S  char[ { ]
  {1   [#]   CS0   }1   
 S  char[ } ]
  {1   [#]   CS0   }1   
 CS  char[ } ]
  [#]   S0   CS0   
 CS  char[ } ]
  [#]   S0   

IState ID 95 :
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ) ]
  CEp0   [#]   -1   CET0   
 CEF  char[ + ]
  (1   CEp0   [#]   )1   
 CEF  char[ - ]
  (1   CEp0   [#]   )1   
 CEF  char[ * ]
  (1   CEp0   [#]   )1   
 CEF  char[ / ]
  (1   CEp0   [#]   )1   
 CEF  char[ and ]
  (1   CEp0   [#]   )1   
 CEF  char[ or ]
  (1   CEp0   [#]   )1   
 CEF  char[ ) ]
  (1   CEp0   [#]   )1   

IState ID 96 :
 CET  char[ + ]
  CET0   *1   [#]   CEF0   
 CET  char[ - ]
  CET0   *1   [#]   CEF0   
 CET  char[ * ]
  CET0   *1   [#]   CEF0   
 CET  char[ / ]
  CET0   *1   [#]   CEF0   
 CET  char[ and ]
  CET0   *1   [#]   CEF0   
 CET  char[ or ]
  CET0   *1   [#]   CEF0   
 CET  char[ ) ]
  CET0   *1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 97 :
 CET  char[ + ]
  CET0   /1   [#]   CEF0   
 CET  char[ - ]
  CET0   /1   [#]   CEF0   
 CET  char[ * ]
  CET0   /1   [#]   CEF0   
 CET  char[ / ]
  CET0   /1   [#]   CEF0   
 CET  char[ and ]
  CET0   /1   [#]   CEF0   
 CET  char[ or ]
  CET0   /1   [#]   CEF0   
 CET  char[ ) ]
  CET0   /1   [#]   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 98 :
 CEp  char[ + ]
  CEp0   +1   [#]   CET0   
 CEp  char[ - ]
  CEp0   +1   [#]   CET0   
 CEp  char[ and ]
  CEp0   +1   [#]   CET0   
 CEp  char[ or ]
  CEp0   +1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   +1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 99 :
 CEp  char[ + ]
  CEp0   -1   [#]   CET0   
 CEp  char[ - ]
  CEp0   -1   [#]   CET0   
 CEp  char[ and ]
  CEp0   -1   [#]   CET0   
 CEp  char[ or ]
  CEp0   -1   [#]   CET0   
 CEp  char[ ) ]
  CEp0   -1   [#]   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   

IState ID 100 :
 S  char[ if ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 S  char[ while ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 S  char[ ID ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 S  char[ { ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 S  char[ } ]
  while1   (1   BEp0   )1   do1   S0   [#]   

IState ID 101 :
 S  char[ if ]
  ID1   =1   [#]   CEp0   ;1   
 S  char[ else ]
  ID1   =1   [#]   CEp0   ;1   
 S  char[ while ]
  ID1   =1   [#]   CEp0   ;1   
 S  char[ ID ]
  ID1   =1   [#]   CEp0   ;1   
 S  char[ { ]
  ID1   =1   [#]   CEp0   ;1   
 S  char[ } ]
  ID1   =1   [#]   CEp0   ;1   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ ; ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ; ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ; ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ ; ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ ; ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ ; ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ ; ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ ; ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ ; ]
  [#]   (1   CEp0   )1   

IState ID 102 :
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   

IState ID 103 :
 S  char[ if ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ else ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  if1   (1   [#]   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 S  char[ else ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 S  char[ while ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 S  char[ ID ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 S  char[ { ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 S  char[ } ]
  if1   (1   [#]   BEp0   )1   then1   S0   
 BEp  char[ or ]
  [#]   BET0   
 BEp  char[ ) ]
  [#]   BET0   
 BEp  char[ or ]
  [#]   BEp0   or1   BET0   
 BEp  char[ ) ]
  [#]   BEp0   or1   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 104 :
 S  char[ if ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 S  char[ else ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 S  char[ while ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 S  char[ ID ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 S  char[ { ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 S  char[ } ]
  while1   (1   [#]   BEp0   )1   do1   S0   
 BEp  char[ or ]
  [#]   BET0   
 BEp  char[ ) ]
  [#]   BET0   
 BEp  char[ or ]
  [#]   BEp0   or1   BET0   
 BEp  char[ ) ]
  [#]   BEp0   or1   BET0   
 BET  char[ and ]
  [#]   BEF0   
 BET  char[ or ]
  [#]   BEF0   
 BET  char[ ) ]
  [#]   BEF0   
 BET  char[ and ]
  [#]   BET0   and1   BEF0   
 BET  char[ or ]
  [#]   BET0   and1   BEF0   
 BET  char[ ) ]
  [#]   BET0   and1   BEF0   
 BEF  char[ and ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ or ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   relop1   CEp0   
 BEF  char[ and ]
  [#]   CEp0   
 BEF  char[ or ]
  [#]   CEp0   
 BEF  char[ ) ]
  [#]   CEp0   
 CEp  char[ + ]
  [#]   CET0   
 CEp  char[ - ]
  [#]   CET0   
 CEp  char[ and ]
  [#]   CET0   
 CEp  char[ or ]
  [#]   CET0   
 CEp  char[ ) ]
  [#]   CET0   
 CEp  char[ relop ]
  [#]   CET0   
 CEp  char[ + ]
  [#]   CEp0   +1   CET0   
 CEp  char[ - ]
  [#]   CEp0   +1   CET0   
 CEp  char[ and ]
  [#]   CEp0   +1   CET0   
 CEp  char[ or ]
  [#]   CEp0   +1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   +1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   +1   CET0   
 CEp  char[ + ]
  [#]   CEp0   -1   CET0   
 CEp  char[ - ]
  [#]   CEp0   -1   CET0   
 CEp  char[ and ]
  [#]   CEp0   -1   CET0   
 CEp  char[ or ]
  [#]   CEp0   -1   CET0   
 CEp  char[ ) ]
  [#]   CEp0   -1   CET0   
 CEp  char[ relop ]
  [#]   CEp0   -1   CET0   
 CET  char[ + ]
  [#]   CEF0   
 CET  char[ - ]
  [#]   CEF0   
 CET  char[ * ]
  [#]   CEF0   
 CET  char[ / ]
  [#]   CEF0   
 CET  char[ and ]
  [#]   CEF0   
 CET  char[ or ]
  [#]   CEF0   
 CET  char[ ) ]
  [#]   CEF0   
 CET  char[ relop ]
  [#]   CEF0   
 CET  char[ + ]
  [#]   CET0   *1   CEF0   
 CET  char[ - ]
  [#]   CET0   *1   CEF0   
 CET  char[ * ]
  [#]   CET0   *1   CEF0   
 CET  char[ / ]
  [#]   CET0   *1   CEF0   
 CET  char[ and ]
  [#]   CET0   *1   CEF0   
 CET  char[ or ]
  [#]   CET0   *1   CEF0   
 CET  char[ ) ]
  [#]   CET0   *1   CEF0   
 CET  char[ relop ]
  [#]   CET0   *1   CEF0   
 CET  char[ + ]
  [#]   CET0   /1   CEF0   
 CET  char[ - ]
  [#]   CET0   /1   CEF0   
 CET  char[ * ]
  [#]   CET0   /1   CEF0   
 CET  char[ / ]
  [#]   CET0   /1   CEF0   
 CET  char[ and ]
  [#]   CET0   /1   CEF0   
 CET  char[ or ]
  [#]   CET0   /1   CEF0   
 CET  char[ ) ]
  [#]   CET0   /1   CEF0   
 CET  char[ relop ]
  [#]   CET0   /1   CEF0   
 CEF  char[ + ]
  [#]   ID1   
 CEF  char[ - ]
  [#]   ID1   
 CEF  char[ * ]
  [#]   ID1   
 CEF  char[ / ]
  [#]   ID1   
 CEF  char[ and ]
  [#]   ID1   
 CEF  char[ or ]
  [#]   ID1   
 CEF  char[ ) ]
  [#]   ID1   
 CEF  char[ relop ]
  [#]   ID1   
 CEF  char[ + ]
  [#]   NUM1   
 CEF  char[ - ]
  [#]   NUM1   
 CEF  char[ * ]
  [#]   NUM1   
 CEF  char[ / ]
  [#]   NUM1   
 CEF  char[ and ]
  [#]   NUM1   
 CEF  char[ or ]
  [#]   NUM1   
 CEF  char[ ) ]
  [#]   NUM1   
 CEF  char[ relop ]
  [#]   NUM1   
 CEF  char[ + ]
  [#]   (1   CEp0   )1   
 CEF  char[ - ]
  [#]   (1   CEp0   )1   
 CEF  char[ * ]
  [#]   (1   CEp0   )1   
 CEF  char[ / ]
  [#]   (1   CEp0   )1   
 CEF  char[ and ]
  [#]   (1   CEp0   )1   
 CEF  char[ or ]
  [#]   (1   CEp0   )1   
 CEF  char[ ) ]
  [#]   (1   CEp0   )1   
 CEF  char[ relop ]
  [#]   (1   CEp0   )1   

IState ID 105 :
 S  char[ if ]
  {1   CS0   [#]   }1   
 S  char[ else ]
  {1   CS0   [#]   }1   
 S  char[ while ]
  {1   CS0   [#]   }1   
 S  char[ ID ]
  {1   CS0   [#]   }1   
 S  char[ { ]
  {1   CS0   [#]   }1   
 S  char[ } ]
  {1   CS0   [#]   }1   

IState ID 106 :
 CEF  char[ + ]
  (1   CEp0   )1   [#]   
 CEF  char[ - ]
  (1   CEp0   )1   [#]   
 CEF  char[ * ]
  (1   CEp0   )1   [#]   
 CEF  char[ / ]
  (1   CEp0   )1   [#]   
 CEF  char[ and ]
  (1   CEp0   )1   [#]   
 CEF  char[ or ]
  (1   CEp0   )1   [#]   
 CEF  char[ ) ]
  (1   CEp0   )1   [#]   

IState ID 107 :
 CET  char[ + ]
  CET0   *1   CEF0   [#]   
 CET  char[ - ]
  CET0   *1   CEF0   [#]   
 CET  char[ * ]
  CET0   *1   CEF0   [#]   
 CET  char[ / ]
  CET0   *1   CEF0   [#]   
 CET  char[ and ]
  CET0   *1   CEF0   [#]   
 CET  char[ or ]
  CET0   *1   CEF0   [#]   
 CET  char[ ) ]
  CET0   *1   CEF0   [#]   

IState ID 108 :
 CET  char[ + ]
  CET0   /1   CEF0   [#]   
 CET  char[ - ]
  CET0   /1   CEF0   [#]   
 CET  char[ * ]
  CET0   /1   CEF0   [#]   
 CET  char[ / ]
  CET0   /1   CEF0   [#]   
 CET  char[ and ]
  CET0   /1   CEF0   [#]   
 CET  char[ or ]
  CET0   /1   CEF0   [#]   
 CET  char[ ) ]
  CET0   /1   CEF0   [#]   

IState ID 109 :
 CEp  char[ + ]
  CEp0   +1   CET0   [#]   
 CEp  char[ - ]
  CEp0   +1   CET0   [#]   
 CEp  char[ and ]
  CEp0   +1   CET0   [#]   
 CEp  char[ or ]
  CEp0   +1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   +1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 110 :
 CEp  char[ + ]
  CEp0   -1   CET0   [#]   
 CEp  char[ - ]
  CEp0   -1   CET0   [#]   
 CEp  char[ and ]
  CEp0   -1   CET0   [#]   
 CEp  char[ or ]
  CEp0   -1   CET0   [#]   
 CEp  char[ ) ]
  CEp0   -1   CET0   [#]   
 CET  char[ + ]
  CET0   [#]   *1   CEF0   
 CET  char[ - ]
  CET0   [#]   *1   CEF0   
 CET  char[ * ]
  CET0   [#]   *1   CEF0   
 CET  char[ / ]
  CET0   [#]   *1   CEF0   
 CET  char[ and ]
  CET0   [#]   *1   CEF0   
 CET  char[ or ]
  CET0   [#]   *1   CEF0   
 CET  char[ ) ]
  CET0   [#]   *1   CEF0   
 CET  char[ + ]
  CET0   [#]   /1   CEF0   
 CET  char[ - ]
  CET0   [#]   /1   CEF0   
 CET  char[ * ]
  CET0   [#]   /1   CEF0   
 CET  char[ / ]
  CET0   [#]   /1   CEF0   
 CET  char[ and ]
  CET0   [#]   /1   CEF0   
 CET  char[ or ]
  CET0   [#]   /1   CEF0   
 CET  char[ ) ]
  CET0   [#]   /1   CEF0   

IState ID 111 :
 S  char[ if ]
  ID1   =1   CEp0   [#]   ;1   
 S  char[ else ]
  ID1   =1   CEp0   [#]   ;1   
 S  char[ while ]
  ID1   =1   CEp0   [#]   ;1   
 S  char[ ID ]
  ID1   =1   CEp0   [#]   ;1   
 S  char[ { ]
  ID1   =1   CEp0   [#]   ;1   
 S  char[ } ]
  ID1   =1   CEp0   [#]   ;1   
 CEp  char[ + ]
  CEp0   [#]   +1   CET0   
 CEp  char[ - ]
  CEp0   [#]   +1   CET0   
 CEp  char[ ; ]
  CEp0   [#]   +1   CET0   
 CEp  char[ + ]
  CEp0   [#]   -1   CET0   
 CEp  char[ - ]
  CEp0   [#]   -1   CET0   
 CEp  char[ ; ]
  CEp0   [#]   -1   CET0   

IState ID 112 :
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   

IState ID 113 :
 S  char[ if ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ else ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ while ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ ID ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ { ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ } ]
  if1   (1   BEp0   [#]   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 S  char[ else ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 S  char[ while ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 S  char[ ID ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 S  char[ { ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 S  char[ } ]
  if1   (1   BEp0   [#]   )1   then1   S0   
 BEp  char[ or ]
  BEp0   [#]   or1   BET0   
 BEp  char[ ) ]
  BEp0   [#]   or1   BET0   

IState ID 114 :
 S  char[ if ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 S  char[ else ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 S  char[ while ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 S  char[ ID ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 S  char[ { ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 S  char[ } ]
  while1   (1   BEp0   [#]   )1   do1   S0   
 BEp  char[ or ]
  BEp0   [#]   or1   BET0   
 BEp  char[ ) ]
  BEp0   [#]   or1   BET0   

IState ID 115 :
 S  char[ if ]
  {1   CS0   }1   [#]   
 S  char[ else ]
  {1   CS0   }1   [#]   
 S  char[ while ]
  {1   CS0   }1   [#]   
 S  char[ ID ]
  {1   CS0   }1   [#]   
 S  char[ { ]
  {1   CS0   }1   [#]   
 S  char[ } ]
  {1   CS0   }1   [#]   

IState ID 116 :
 S  char[ if ]
  ID1   =1   CEp0   ;1   [#]   
 S  char[ else ]
  ID1   =1   CEp0   ;1   [#]   
 S  char[ while ]
  ID1   =1   CEp0   ;1   [#]   
 S  char[ ID ]
  ID1   =1   CEp0   ;1   [#]   
 S  char[ { ]
  ID1   =1   CEp0   ;1   [#]   
 S  char[ } ]
  ID1   =1   CEp0   ;1   [#]   

IState ID 117 :
 S  char[ if ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ else ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   [#]   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 S  char[ else ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   [#]   then1   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   [#]   then1   S0   

IState ID 118 :
 S  char[ if ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 S  char[ else ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 S  char[ while ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 S  char[ ID ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 S  char[ { ]
  while1   (1   BEp0   )1   [#]   do1   S0   
 S  char[ } ]
  while1   (1   BEp0   )1   [#]   do1   S0   

IState ID 119 :
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ else ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   [#]   S0   else1   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ else ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   [#]   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ else ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ else ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ else ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   

IState ID 120 :
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ else ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ else ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ while ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ ID ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ { ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ } ]
  while1   (1   BEp0   )1   do1   [#]   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ else ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ else ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   

IState ID 121 :
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ else ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ else ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   

IState ID 122 :
 S  char[ if ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 S  char[ else ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 S  char[ while ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 S  char[ ID ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 S  char[ { ]
  while1   (1   BEp0   )1   do1   S0   [#]   
 S  char[ } ]
  while1   (1   BEp0   )1   do1   S0   [#]   

IState ID 123 :
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ else ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   else1   [#]   S0   
 S  char[ if ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ else ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ while ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ ID ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ { ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ } ]
  [#]   if1   (1   BEp0   )1   then1   S0   
 S  char[ if ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ else ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ while ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ ID ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ { ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ } ]
  [#]   while1   (1   BEp0   )1   do1   S0   
 S  char[ if ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ else ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ while ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ ID ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ { ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ } ]
  [#]   ID1   =1   CEp0   ;1   
 S  char[ if ]
  [#]   {1   CS0   }1   
 S  char[ else ]
  [#]   {1   CS0   }1   
 S  char[ while ]
  [#]   {1   CS0   }1   
 S  char[ ID ]
  [#]   {1   CS0   }1   
 S  char[ { ]
  [#]   {1   CS0   }1   
 S  char[ } ]
  [#]   {1   CS0   }1   

IState ID 124 :
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 S  char[ else ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   else1   S0   [#]   

State ID 0
State ID 1
State ID 2
State ID 3
State ID 4
State ID 5
State ID 6
State ID 7
State ID 8
State ID 9
State ID 10
State ID 11
State ID 12
State ID 13
State ID 14
State ID 15
State ID 16
State ID 17
State ID 18
State ID 19
State ID 20
State ID 21
State ID 22
State ID 23
State ID 24
State ID 25
State ID 26
State ID 27
State ID 28
State ID 29
State ID 30
State ID 31
State ID 32
State ID 33
State ID 34
State ID 35
State ID 36
State ID 37
State ID 38
State ID 39
State ID 40
State ID 41
State ID 42
State ID 43
State ID 44
State ID 45
State ID 46
State ID 47
State ID 48
State ID 49
State ID 50
State ID 51
State ID 52
State ID 53
State ID 54
State ID 55
State ID 56
State ID 57
State ID 58
State ID 59
State ID 60
State ID 61
State ID 62
State ID 63
State ID 64
State ID 65
State ID 66
State ID 67
State ID 68
State ID 69
State ID 70
State ID 71
State ID 72
State ID 73
State ID 74
State ID 75
State ID 76
State ID 77
State ID 78
State ID 79
State ID 80
State ID 81
State ID 82
State ID 83
State ID 84
State ID 85
State ID 86
State ID 87
State ID 88
State ID 89
State ID 90
State ID 91
State ID 92
State ID 93
State ID 94
State ID 95
State ID 96
State ID 97
State ID 98
State ID 99
State ID 100
State ID 101
State ID 102
State ID 103
State ID 104
State ID 105
State ID 106
State ID 107
State ID 108
State ID 109
State ID 110
State ID 111
State ID 112
State ID 113
State ID 114
State ID 115
State ID 116
State ID 117
State ID 118
State ID 119
State ID 120
State ID 121
 ERR: Recur Action Conflict 1
   TransTo123
  Auto-Set Action.preTerm [else] to [#]
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ else ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   else1   S0   
 S  char[ if ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ else ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ while ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ ID ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ { ]
  if1   (1   BEp0   )1   then1   S0   [#]   
 S  char[ } ]
  if1   (1   BEp0   )1   then1   S0   [#]   

State ID 122
State ID 123
State ID 124
		#	(	)	*	+	-	/	;	=	BEF	BET	BEp	CEF	CET	CEp	CS	D	ID	NUM	P	S	_P	and	do	else	if	int	or	relop	then	while	{	}
sta-0	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G1	 	 	 	 	 	 	 	 	 	 	 	S2	 	
sta-1	R0	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-2	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G3	 	 	 	 	 	 	 	 	 	S4	 	 	 	 	 	 	
sta-3	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G5	 	S6	 	 	G7	 	 	 	 	S8	S9	 	 	 	S10	S11	 	
sta-4	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S12	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-5	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S13	
sta-6	 	 	 	 	 	 	 	 	S14	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-7	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G15	 	S6	 	 	G7	 	 	 	 	S8	 	 	 	 	S10	S11	R10	
sta-8	 	S16	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-9	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S17	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-10	 	S18	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-11	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G19	 	S6	 	 	G7	 	 	 	 	S8	 	 	 	 	S10	S11	 	
sta-12	 	 	 	 	 	 	 	S20	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-13	R1	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-14	 	S21	 	 	 	 	 	 	 	 	 	 	G22	G23	G24	 	 	S25	S26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-15	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R9	
sta-16	 	S27	 	 	 	 	 	 	 	G28	G29	G30	G31	G32	G33	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-17	 	 	 	 	 	 	 	S36	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-18	 	S27	 	 	 	 	 	 	 	G28	G29	G37	G31	G32	G33	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-19	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S38	
sta-20	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R3	 	 	 	 	 	 	 	R3	R3	 	 	 	R3	R3	 	
sta-21	 	S39	 	 	 	 	 	 	 	 	 	 	G40	G41	G42	 	 	S43	S44	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-22	 	 	 	R20	R20	R20	R20	R20	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-23	 	 	 	S45	R17	R17	S46	R17	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-24	 	 	 	 	S47	S48	 	S49	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-25	 	 	 	R23	R23	R23	R23	R23	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-26	 	 	 	R24	R24	R24	R24	R24	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-27	 	S39	 	 	 	 	 	 	 	 	 	 	G40	G41	G50	 	 	S43	S44	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-28	 	 	R13	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R13	 	 	 	 	R13	 	 	 	 	 	
sta-29	 	 	R11	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S51	 	 	 	 	R11	 	 	 	 	 	
sta-30	 	 	S52	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S53	 	 	 	 	 	
sta-31	 	 	R20	R20	R20	R20	R20	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R20	 	 	 	 	R20	R20	 	 	 	 	
sta-32	 	 	R17	S54	R17	R17	S55	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R17	 	 	 	 	R17	R17	 	 	 	 	
sta-33	 	 	R16	 	S56	S57	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R16	 	 	 	 	R16	S58	 	 	 	 	
sta-34	 	 	R23	R23	R23	R23	R23	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R23	 	 	 	 	R23	R23	 	 	 	 	
sta-35	 	 	R24	R24	R24	R24	R24	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R24	 	 	 	 	R24	R24	 	 	 	 	
sta-36	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R2	 	 	 	 	 	 	 	R2	R2	 	 	 	R2	R2	 	
sta-37	 	 	S59	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S53	 	 	 	 	 	
sta-38	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R8	 	 	 	 	 	 	 	R8	 	 	 	 	R8	R8	R8	
sta-39	 	S39	 	 	 	 	 	 	 	 	 	 	G40	G41	G60	 	 	S43	S44	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-40	 	 	R20	R20	R20	R20	R20	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-41	 	 	R17	S61	R17	R17	S62	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-42	 	 	S63	 	S64	S65	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-43	 	 	R23	R23	R23	R23	R23	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-44	 	 	R24	R24	R24	R24	R24	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-45	 	S21	 	 	 	 	 	 	 	 	 	 	G66	 	 	 	 	S25	S26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-46	 	S21	 	 	 	 	 	 	 	 	 	 	G67	 	 	 	 	S25	S26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-47	 	S21	 	 	 	 	 	 	 	 	 	 	G22	G68	 	 	 	S25	S26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-48	 	S21	 	 	 	 	 	 	 	 	 	 	G22	G69	 	 	 	S25	S26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-49	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R7	 	 	 	 	 	 	 	R7	 	 	 	 	R7	R7	R7	
sta-50	 	 	S70	 	S64	S65	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-51	 	S27	 	 	 	 	 	 	 	G71	 	 	G31	G32	G33	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-52	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S72	 	 	 	
sta-53	 	S27	 	 	 	 	 	 	 	G28	G73	 	G31	G32	G33	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-54	 	S27	 	 	 	 	 	 	 	 	 	 	G74	 	 	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-55	 	S27	 	 	 	 	 	 	 	 	 	 	G75	 	 	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-56	 	S27	 	 	 	 	 	 	 	 	 	 	G31	G76	 	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-57	 	S27	 	 	 	 	 	 	 	 	 	 	G31	G77	 	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-58	 	S78	 	 	 	 	 	 	 	 	 	 	G79	G80	G81	 	 	S82	S83	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-59	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S84	 	 	 	 	 	 	 	 	 	
sta-60	 	 	S85	 	S64	S65	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-61	 	S39	 	 	 	 	 	 	 	 	 	 	G86	 	 	 	 	S43	S44	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-62	 	S39	 	 	 	 	 	 	 	 	 	 	G87	 	 	 	 	S43	S44	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-63	 	 	 	R25	R25	R25	R25	R25	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-64	 	S39	 	 	 	 	 	 	 	 	 	 	G40	G88	 	 	 	S43	S44	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-65	 	S39	 	 	 	 	 	 	 	 	 	 	G40	G89	 	 	 	S43	S44	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-66	 	 	 	R21	R21	R21	R21	R21	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-67	 	 	 	R22	R22	R22	R22	R22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-68	 	 	 	S45	R18	R18	S46	R18	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-69	 	 	 	S45	R19	R19	S46	R19	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-70	 	 	R25	R25	R25	R25	R25	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R25	 	 	 	 	R25	R25	 	 	 	 	
sta-71	 	 	R14	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R14	 	 	 	 	R14	 	 	 	 	 	
sta-72	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S90	 	 	G91	 	 	 	 	S92	 	 	 	 	S93	S94	 	
sta-73	 	 	R12	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S51	 	 	 	 	R12	 	 	 	 	 	
sta-74	 	 	R21	R21	R21	R21	R21	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R21	 	 	 	 	R21	R21	 	 	 	 	
sta-75	 	 	R22	R22	R22	R22	R22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R22	 	 	 	 	R22	R22	 	 	 	 	
sta-76	 	 	R18	S54	R18	R18	S55	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R18	 	 	 	 	R18	R18	 	 	 	 	
sta-77	 	 	R19	S54	R19	R19	S55	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R19	 	 	 	 	R19	R19	 	 	 	 	
sta-78	 	S39	 	 	 	 	 	 	 	 	 	 	G40	G41	G95	 	 	S43	S44	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-79	 	 	R20	R20	R20	R20	R20	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R20	 	 	 	 	R20	 	 	 	 	 	
sta-80	 	 	R17	S96	R17	R17	S97	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R17	 	 	 	 	R17	 	 	 	 	 	
sta-81	 	 	R15	 	S98	S99	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R15	 	 	 	 	R15	 	 	 	 	 	
sta-82	 	 	R23	R23	R23	R23	R23	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R23	 	 	 	 	R23	 	 	 	 	 	
sta-83	 	 	R24	R24	R24	R24	R24	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R24	 	 	 	 	R24	 	 	 	 	 	
sta-84	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S6	 	 	G100	 	 	 	 	S8	 	 	 	 	S10	S11	 	
sta-85	 	 	R25	R25	R25	R25	R25	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-86	 	 	R21	R21	R21	R21	R21	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-87	 	 	R22	R22	R22	R22	R22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-88	 	 	R18	S61	R18	R18	S62	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-89	 	 	R19	S61	R19	R19	S62	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-90	 	 	 	 	 	 	 	 	S101	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-91	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R5	 	 	 	 	 	 	S102	R5	 	 	 	 	R5	R5	R5	
sta-92	 	S103	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-93	 	S104	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-94	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	G105	 	S6	 	 	G7	 	 	 	 	S8	 	 	 	 	S10	S11	 	
sta-95	 	 	S106	 	S64	S65	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-96	 	S78	 	 	 	 	 	 	 	 	 	 	G107	 	 	 	 	S82	S83	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-97	 	S78	 	 	 	 	 	 	 	 	 	 	G108	 	 	 	 	S82	S83	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-98	 	S78	 	 	 	 	 	 	 	 	 	 	G79	G109	 	 	 	S82	S83	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-99	 	S78	 	 	 	 	 	 	 	 	 	 	G79	G110	 	 	 	S82	S83	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-100	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R6	 	 	 	 	 	 	 	R6	 	 	 	 	R6	R6	R6	
sta-101	 	S21	 	 	 	 	 	 	 	 	 	 	G22	G23	G111	 	 	S25	S26	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-102	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S6	 	 	G112	 	 	 	 	S8	 	 	 	 	S10	S11	 	
sta-103	 	S27	 	 	 	 	 	 	 	G28	G29	G113	G31	G32	G33	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-104	 	S27	 	 	 	 	 	 	 	G28	G29	G114	G31	G32	G33	 	 	S34	S35	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-105	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S115	
sta-106	 	 	R25	R25	R25	R25	R25	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R25	 	 	 	 	R25	 	 	 	 	 	
sta-107	 	 	R21	R21	R21	R21	R21	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R21	 	 	 	 	R21	 	 	 	 	 	
sta-108	 	 	R22	R22	R22	R22	R22	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R22	 	 	 	 	R22	 	 	 	 	 	
sta-109	 	 	R18	S96	R18	R18	S97	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R18	 	 	 	 	R18	 	 	 	 	 	
sta-110	 	 	R19	S96	R19	R19	S97	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R19	 	 	 	 	R19	 	 	 	 	 	
sta-111	 	 	 	 	S47	S48	 	S116	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	
sta-112	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R4	 	 	 	 	 	 	 	R4	 	 	 	 	R4	R4	R4	
sta-113	 	 	S117	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S53	 	 	 	 	 	
sta-114	 	 	S118	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S53	 	 	 	 	 	
sta-115	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R8	 	 	 	 	 	 	R8	R8	 	 	 	 	R8	R8	R8	
sta-116	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R7	 	 	 	 	 	 	R7	R7	 	 	 	 	R7	R7	R7	
sta-117	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S119	 	 	 	
sta-118	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S120	 	 	 	 	 	 	 	 	 	
sta-119	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S90	 	 	G121	 	 	 	 	S92	 	 	 	 	S93	S94	 	
sta-120	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S90	 	 	G122	 	 	 	 	S92	 	 	 	 	S93	S94	 	
sta-121	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R5	 	 	 	 	 	 	S123	R5	 	 	 	 	R5	R5	R5	
sta-122	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R6	 	 	 	 	 	 	R6	R6	 	 	 	 	R6	R6	R6	
sta-123	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	S90	 	 	G124	 	 	 	 	S92	 	 	 	 	S93	S94	 	
sta-124	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	R4	 	 	 	 	 	 	R4	R4	 	 	 	 	R4	R4	R4	
a
b
a
10
a
>
0
b
a
b
a
1
a
<=
10
a
>
5
a
b
1
c
a
3

 LEX Input 55
 Step { 
 Step int 
 Step ID a
 Step ; 
 Recur [3] To D statePush 3
 Step int 
 Step ID b
 Step ; 
 Recur [4] To D statePush 3
 Step ID a
 Step = 
 Step NUM 10
 Recur [1] To CEF statePush 22
 Recur [1] To CET statePush 23
 Recur [1] To CEp statePush 24
 Step ; 
 Recur [4] To S statePush 7
 Step if 
 Step ( 
 Step ID a
 Recur [1] To CEF statePush 31
 Recur [1] To CET statePush 32
 Recur [1] To CEp statePush 33
 Step relop >
 Step NUM 0
 Recur [1] To CEF statePush 79
 Recur [1] To CET statePush 80
 Recur [1] To CEp statePush 81
 Recur [3] To BEF statePush 28
 Recur [1] To BET statePush 29
 Recur [1] To BEp statePush 30
 Step ) 
 Step then 
 Step ID b
 Step = 
 Step ID a
 Recur [1] To CEF statePush 22
 Recur [1] To CET statePush 23
 Recur [1] To CEp statePush 111
 Step ; 
 Recur [4] To S statePush 91
 Step else 
 Step ID b
 Step = 
 Step ID a
 Recur [1] To CEF statePush 22
 Recur [1] To CET statePush 23
 Recur [1] To CEp statePush 24
 Step - 
 Step NUM 1
 Recur [1] To CEF statePush 22
 Recur [1] To CET statePush 69
 Recur [3] To CEp statePush 24
 Step ; 
 Recur [4] To S statePush 112
 Recur [8] To S statePush 7
 Step while 
 Step ( 
 Step ID a
 Recur [1] To CEF statePush 31
 Recur [1] To CET statePush 32
 Recur [1] To CEp statePush 33
 Step relop <=
 Step NUM 10
 Recur [1] To CEF statePush 79
 Recur [1] To CET statePush 80
 Recur [1] To CEp statePush 81
 Recur [3] To BEF statePush 28
 Recur [1] To BET statePush 29
 Step and 
 Step ID a
 Recur [1] To CEF statePush 31
 Recur [1] To CET statePush 32
 Recur [1] To CEp statePush 33
 Step relop >
 Step NUM 5
 Recur [1] To CEF statePush 79
 Recur [1] To CET statePush 80
 Recur [1] To CEp statePush 81
 Recur [3] To BEF statePush 71
 Recur [3] To BET statePush 29
 Recur [1] To BEp statePush 37
 Step ) 
 Step do 
 Step { 
 Step ID a
 Step = 
 Step ID b
 Recur [1] To CEF statePush 22
 Recur [1] To CET statePush 23
 Recur [1] To CEp statePush 24
 Step + 
 Step NUM 1
 Recur [1] To CEF statePush 22
 Recur [1] To CET statePush 68
 Recur [3] To CEp statePush 24
 Step ; 
 Recur [4] To S statePush 7
 Step ID c
 Step = 
 Step ID a
 Recur [1] To CEF statePush 22
 Recur [1] To CET statePush 23
 Recur [1] To CEp statePush 24
 Step + 
 Step NUM 3
 Recur [1] To CEF statePush 22
 Recur [1] To CET statePush 68
 Recur [3] To CEp statePush 24
 Step ; 
 Recur [4] To S statePush 7
 Recur [1] To CS statePush 15
 Recur [2] To CS statePush 19
 Step } 
 Recur [3] To S statePush 100
 Recur [6] To S statePush 7
 Recur [1] To CS statePush 15
 Recur [2] To CS statePush 15
 Recur [2] To CS statePush 5
 Step } 
